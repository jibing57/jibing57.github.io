<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Recording</title>
  
  <subtitle>Recording, Sharing, TimeSaving -- 一切成本皆时间</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jibing57.com/"/>
  <updated>2018-04-23T02:59:55.711Z</updated>
  <id>http://www.jibing57.com/</id>
  
  <author>
    <name>jibing57</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>S3进阶系列(二) ——权限管理</title>
    <link href="http://www.jibing57.com/2018/04/21/aws-s3-master-permission/"/>
    <id>http://www.jibing57.com/2018/04/21/aws-s3-master-permission/</id>
    <published>2018-04-21T09:59:59.000Z</published>
    <updated>2018-04-23T02:59:55.711Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是S3的权限管理&quot;&gt;&lt;a href=&quot;#什么是S3的权限管理&quot; class=&quot;headerlink&quot; title=&quot;什么是S3的权限管理&quot;&gt;&lt;/a&gt;什么是S3的权限管理&lt;/h3&gt;&lt;p&gt;S3的权限管理是任何使用S3的人都无法绕开的功能,决定了S3中的Object是否能够被访问。&lt;/p&gt;
&lt;p&gt;权限管理本质上解决了这么一个问题: 谁(Principal)能够在何种条件(condition)下被允许或拒绝(Effect)对哪些资源(Resource)做何种操作(Action)&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="IAM" scheme="http://www.jibing57.com/tags/IAM/"/>
    
      <category term="S3" scheme="http://www.jibing57.com/tags/S3/"/>
    
      <category term="AWS CLI" scheme="http://www.jibing57.com/tags/AWS-CLI/"/>
    
  </entry>
  
  <entry>
    <title>如何去除SSH key中的passphrase</title>
    <link href="http://www.jibing57.com/2018/04/19/how-to-remove-the-passphrase-of-ssh-key/"/>
    <id>http://www.jibing57.com/2018/04/19/how-to-remove-the-passphrase-of-ssh-key/</id>
    <published>2018-04-19T13:15:28.000Z</published>
    <updated>2018-04-19T08:15:06.891Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;去除passphrase的方法&quot;&gt;&lt;a href=&quot;#去除passphrase的方法&quot; class=&quot;headerlink&quot; title=&quot;去除passphrase的方法&quot;&gt;&lt;/a&gt;去除passphrase的方法&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;ssh-keygen&lt;/code&gt;来重新设置一个空的passphrase, 就相当于去除了原来的passphrase, 答案来自&lt;a href=&quot;https://stackoverflow.com/a/112409&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow&lt;/a&gt;, 回答者还很贴心的提示，输入的passphrase会被记录在~/.bash_history中，别忘记处理这个情况。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ ssh-keygen -p [-P old_passphrase] [-N new_passphrase] [-f keyfile]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://www.jibing57.com/categories/Shell/"/>
    
    
      <category term="Linux" scheme="http://www.jibing57.com/tags/Linux/"/>
    
      <category term="SSH" scheme="http://www.jibing57.com/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>S3进阶系列(一) —— S3基础知识</title>
    <link href="http://www.jibing57.com/2018/04/18/aws-s3-master-basic/"/>
    <id>http://www.jibing57.com/2018/04/18/aws-s3-master-basic/</id>
    <published>2018-04-18T12:44:08.000Z</published>
    <updated>2018-04-20T03:22:02.880Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;S3是AWS服务最早推出的几项服务之一，也是使用最为频繁的几个AWS服务之一。官网文档以及网上文章零零散散看了不少,实际使用中也用过S3的大多数功能，但“纸上得来终觉浅，绝知此事要躬行”，决定给自己挖个坑，结合已读资料和实际使用经验，系统地来梳理一下S3的已有功能。&lt;/p&gt;
&lt;p&gt;本篇是第一篇,介绍一下S3的一些基础知识。希望能够坚持把这个系列写完。&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="S3" scheme="http://www.jibing57.com/tags/S3/"/>
    
  </entry>
  
  <entry>
    <title>订阅RDS事件</title>
    <link href="http://www.jibing57.com/2018/03/16/how-to-subscribe-RDS-event/"/>
    <id>http://www.jibing57.com/2018/03/16/how-to-subscribe-RDS-event/</id>
    <published>2018-03-16T12:22:54.000Z</published>
    <updated>2018-03-19T02:40:03.535Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;关于RDS状态的监控，除了常规的CloudWatch Metric以外。RDS还有一个事件机制，能够将RDS的事件通知到SNS。&lt;/p&gt;
&lt;h3 id=&quot;RDS-Event简介&quot;&gt;&lt;a href=&quot;#RDS-Event简介&quot; class=&quot;headerlink&quot; title=&quot;RDS Event简介&quot;&gt;&lt;/a&gt;RDS Event简介&lt;/h3&gt;&lt;h4 id=&quot;RDS-Event-Source-type&quot;&gt;&lt;a href=&quot;#RDS-Event-Source-type&quot; class=&quot;headerlink&quot; title=&quot;RDS Event - Source type&quot;&gt;&lt;/a&gt;RDS Event - Source type&lt;/h4&gt;&lt;p&gt;RDS的事件类型分为如下六大类:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据库实例(DB instance)&lt;/li&gt;
&lt;li&gt;数据库集群(DB cluster)&lt;/li&gt;
&lt;li&gt;数据库快照(DB snapshot)&lt;/li&gt;
&lt;li&gt;数据库集群快照(DB cluster snapshot)&lt;/li&gt;
&lt;li&gt;数据库安全组(DB security group)&lt;/li&gt;
&lt;li&gt;数据库参数组(DB parameter group)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="RDS" scheme="http://www.jibing57.com/tags/RDS/"/>
    
  </entry>
  
  <entry>
    <title>在Chrome中设置Google搜索为NoCountryRedirect</title>
    <link href="http://www.jibing57.com/2018/03/15/how-to-set-chrome-to-use-google-with-NoCountryRedirect/"/>
    <id>http://www.jibing57.com/2018/03/15/how-to-set-chrome-to-use-google-with-NoCountryRedirect/</id>
    <published>2018-03-15T12:01:18.000Z</published>
    <updated>2018-03-15T06:48:36.135Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;添加代理来科学上网时，使用Google进行搜索，Chrome浏览器默认会重定向到代理国所在的Google域名。比如&lt;code&gt;https://www.google.co.kr/&lt;/code&gt;,&lt;code&gt;https://www.google.co.jp/&lt;/code&gt;等, 已经在&lt;code&gt;www.google.com&lt;/code&gt;登录的Google账号就还得重登, 极度烦躁。&lt;/p&gt;
&lt;p&gt;下面是几个固定使用&lt;code&gt;www.google.com&lt;/code&gt;来进行搜索的方法&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://www.jibing57.com/categories/Tools/"/>
    
    
      <category term="Chrome" scheme="http://www.jibing57.com/tags/Chrome/"/>
    
  </entry>
  
  <entry>
    <title>AWS RDS recovery due to issue with underlying hardware</title>
    <link href="http://www.jibing57.com/2018/03/14/AWS-RDS-recovery-due-to-issue-with-underlying-hardware/"/>
    <id>http://www.jibing57.com/2018/03/14/AWS-RDS-recovery-due-to-issue-with-underlying-hardware/</id>
    <published>2018-03-14T13:27:54.000Z</published>
    <updated>2018-03-15T03:19:52.367Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;早上刚上班就收到一封主题为”RDS Notification Message”的订阅邮件，message内容为”Recovery of the DB instance has started. Recovery time will vary with the amount of data to be recovered”。&lt;/p&gt;
&lt;p&gt;上Web Console查看发生了什么事，发现RDS已经自我恢复完毕了。最新的Event消息提示为”Recovery of the DB instance is complete.”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/AWS/RDS/rds_recovery_event.png&quot; alt=&quot;rds_recovery_event&quot;&gt;&lt;/p&gt;
&lt;p&gt;提了Case询问了下，也在网上搜了一下，基本搞清楚了是怎么个回事，记录如下。&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="RDS" scheme="http://www.jibing57.com/tags/RDS/"/>
    
      <category term="Failover" scheme="http://www.jibing57.com/tags/Failover/"/>
    
  </entry>
  
  <entry>
    <title>EC2底层硬件Retirement的处理方法</title>
    <link href="http://www.jibing57.com/2018/03/12/how-to-handle-Retirement-Notification-Amazon-EC2-Instance-scheduled-for-retirement/"/>
    <id>http://www.jibing57.com/2018/03/12/how-to-handle-Retirement-Notification-Amazon-EC2-Instance-scheduled-for-retirement/</id>
    <published>2018-03-12T14:10:54.000Z</published>
    <updated>2018-03-12T14:19:11.395Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;AWS的EC2的实例是在物理机上虚拟化出来的，当承载EC2的物理机出现问题或者要退役时，AWS会发送一封主题为&lt;strong&gt;[Retirement Notification] Amazon EC2 Instance scheduled for retirement&lt;/strong&gt;的email到AWS Account的注册邮箱中。&lt;/p&gt;
&lt;p&gt;以前多次收到过这类邮件，但提示的目标instance-ID都是AutoScaling中运行的EC2，而AutoScaling中的Instance自动伸缩不会影响业务，因此也从没有主动去处理过。&lt;/p&gt;
&lt;p&gt;这次突然收到通知邮件，说一台运行后台任务的Instance的underlying hardware hosting出问题了。在此记录一下相关的现象和解决方法。&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="EC2" scheme="http://www.jibing57.com/tags/EC2/"/>
    
  </entry>
  
  <entry>
    <title>使用seed将csv格式的db文件导入DB</title>
    <link href="http://www.jibing57.com/2018/02/11/a-way-to-use-csv-file-to-populate-the-database-by-rake-db-seed-on-rails/"/>
    <id>http://www.jibing57.com/2018/02/11/a-way-to-use-csv-file-to-populate-the-database-by-rake-db-seed-on-rails/</id>
    <published>2018-02-11T14:00:33.000Z</published>
    <updated>2018-02-11T10:05:51.406Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一段将csv格式的db文件导入对应表结构的代码。&lt;/p&gt;
&lt;h3 id=&quot;前提要求&quot;&gt;&lt;a href=&quot;#前提要求&quot; class=&quot;headerlink&quot; title=&quot;前提要求&quot;&gt;&lt;/a&gt;前提要求&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;csv文件名字和Model Class需要一一对应， 比如用户表users, Model中定义是&lt;code&gt;class User &amp;lt; ActiveRecord::Base&lt;/code&gt;, 那么csv文件名字得是user.csv&lt;/li&gt;
&lt;li&gt;csv文件需要有header,并且header名字需要同数据库中对应表的字段名相同&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Code" scheme="http://www.jibing57.com/categories/Code/"/>
    
    
      <category term="Ruby" scheme="http://www.jibing57.com/tags/Ruby/"/>
    
      <category term="Rails" scheme="http://www.jibing57.com/tags/Rails/"/>
    
  </entry>
  
  <entry>
    <title>使用AWS CLI来备份和恢复S3 Bucket的ACL</title>
    <link href="http://www.jibing57.com/2018/02/11/aws-s3-cli-to-backup-and-restore-bucket-acl/"/>
    <id>http://www.jibing57.com/2018/02/11/aws-s3-cli-to-backup-and-restore-bucket-acl/</id>
    <published>2018-02-11T12:43:43.000Z</published>
    <updated>2018-02-11T10:08:02.977Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;S3 Bucket层面的权限管理，推荐使用Bucket Policy来管理，但可能会有一些遗留的S3 Bucket, 还使用着Bucket ACL来进行权限管理。&lt;/p&gt;
&lt;p&gt;在将Bucket ACl升级为Bucket Policy或者是更新Bucket ACL的时候，会有备份Bucket ACL的需求。此处介绍一下如何使用AWS CLI来备份和恢复Bucket的Bucket ACL。&lt;/p&gt;
&lt;h3 id=&quot;备份-Bucket-ACL&quot;&gt;&lt;a href=&quot;#备份-Bucket-ACL&quot; class=&quot;headerlink&quot; title=&quot;备份 Bucket ACL&quot;&gt;&lt;/a&gt;备份 Bucket ACL&lt;/h3&gt;&lt;p&gt;使用CLI中s3api中的&lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/reference/s3api/get-bucket-acl.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;get-bucket-acl&lt;/a&gt;命令来保存bucket acl。&lt;/p&gt;
&lt;h4 id=&quot;用法&quot;&gt;&lt;a href=&quot;#用法&quot; class=&quot;headerlink&quot; title=&quot;用法&quot;&gt;&lt;/a&gt;用法&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;  get-bucket-acl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--bucket &amp;lt;value&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[--cli-input-json &amp;lt;value&amp;gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[--generate-cli-skeleton &amp;lt;value&amp;gt;]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="S3" scheme="http://www.jibing57.com/tags/S3/"/>
    
      <category term="AWS CLI" scheme="http://www.jibing57.com/tags/AWS-CLI/"/>
    
  </entry>
  
  <entry>
    <title>Macos下如何实现grep的非贪婪模式</title>
    <link href="http://www.jibing57.com/2018/02/09/non-greedy-match-in-grep-on-macos/"/>
    <id>http://www.jibing57.com/2018/02/09/non-greedy-match-in-grep-on-macos/</id>
    <published>2018-02-09T13:10:43.000Z</published>
    <updated>2018-02-09T09:16:23.889Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;有时候需要使用正则的&lt;code&gt;非贪婪模式(non-greedy或者叫lazy模式)&lt;/code&gt;来搜一些内容，但Macos系统自带的&lt;code&gt;grep&lt;/code&gt;无法胜任。&lt;br&gt;Mac下的&lt;code&gt;grep&lt;/code&gt;是BSD系的，不能使用-P参数来使用perl模式。Linux下的&lt;code&gt;GNU grep&lt;/code&gt;就可以使用-P参数来支持非贪婪模式。&lt;/p&gt;
&lt;p&gt;MacOS自带的&lt;code&gt;grep&lt;/code&gt;的示例:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cat grep_on_macos.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;carl has a nice car. the car has four wheels.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 支持普通正则&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ grep -o &amp;quot;car.*has&amp;quot; grep_on_macos.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;carl has a nice car. the car has&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 不支持带?的非贪婪模式&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ grep -o &amp;quot;car.*?has&amp;quot; grep_on_macos.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此处记录两个可行的方法来解决该问题&lt;/p&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://www.jibing57.com/categories/Shell/"/>
    
    
      <category term="Linux" scheme="http://www.jibing57.com/tags/Linux/"/>
    
      <category term="MacOS" scheme="http://www.jibing57.com/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>AWS Certified Solutions Architect - Professional Road Map</title>
    <link href="http://www.jibing57.com/2018/02/07/AWS-Certified-Solutions-Architect-Professional/"/>
    <id>http://www.jibing57.com/2018/02/07/AWS-Certified-Solutions-Architect-Professional/</id>
    <published>2018-02-07T07:27:17.000Z</published>
    <updated>2018-02-11T17:18:12.338Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Official-AWS-Certification-Page&quot;&gt;&lt;a href=&quot;#Official-AWS-Certification-Page&quot; class=&quot;headerlink&quot; title=&quot;Official AWS Certification Page&quot;&gt;&lt;/a&gt;Official AWS Certification Page&lt;/h2&gt;&lt;p&gt;访问官网&lt;a href=&quot;https://amazonaws-china.com/certification/certification-prep/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AWS Certification&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参加 AWS 培训课程&lt;/li&gt;
&lt;li&gt;查看考试指南和样题&lt;ul&gt;
&lt;li&gt;了解考试涉及的概念并整体了解需要学习哪些内容, &lt;a href=&quot;http://d0.awsstatic-china.com/Train%20&amp;amp;%20Cert/docs/AWS_certified_solutions_architect_professional_blueprint.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AWS Certified Solutions Architect – Professional 考试指南&lt;/a&gt; 相当于考试大纲, 必看,而且需要反复的看。因为学习过一阵后再来看Guide，会有更深的体会。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://d0.awsstatic-china.com/training-and-certification/docs/AWS_certified_solutions_architect_professional_examsample.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;考试样题&lt;/a&gt;用于熟悉题目题型。几个样题都是大段大段的文字，实际考试题目中也有字数少的题目。但题目的阅读量绝对是比Asoocaiated的大得多。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;练习试验&lt;ul&gt;
&lt;li&gt;注册一个AWS全球账号，使用一年的免费额度结合Blueprint中的各个内容进行试验。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;学习 AWS 白皮书&lt;ul&gt;
&lt;li&gt;白皮书是纯英文的，每个白皮书篇幅都很长。&lt;/li&gt;
&lt;li&gt;在BluePrint的描述中，和AWS Certified Solutions Architect - Associate的白皮书列表相比，多了&lt;strong&gt;Defining Fault Tolerant Applications in the AWS Cloud&lt;/strong&gt;这一份白皮书，官网找了一下，只有一个名字类似的名为&lt;a href=&quot;https://d1.awsstatic.com/whitepapers/aws-building-fault-tolerant-applications.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Building Fault-Tolerant Applications on AWS&lt;/a&gt;的白皮书，时间还是October 2011的。不管怎样，但愿好理念永不过时，还是整个念一遍吧。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;查看 AWS 常见问题&lt;ul&gt;
&lt;li&gt;官网推荐的FAQ都建议看完。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;参加模拟考试&lt;ul&gt;
&lt;li&gt;40美刀一次。是否值得因人而异。参加Professional的考试，肯定都已经经历过AWS Certified Solutions Architect – Associate的洗礼了, 因此熟悉考试界面肯定不是决定要参加模拟考试的目的。一个合理的理由是，可以提前熟悉一下Professional考题阅读难度, 为正式考试的时候做好心理准备。网上都说AWS Certified Solutions Architect – Professional这个考试最大的难度就是要在170分钟内阅读，理解77~80道字数不算少的题，然后选出最优的答案。网上一些母语是英语的老外都感慨阅读量比较大，何况是我们这种非英语系的国家的考生了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;报名考试并获得认证&lt;ul&gt;
&lt;li&gt;登陆&lt;a href=&quot;https://www.aws.training/certification&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.aws.training/certification&lt;/a&gt;注册进行考试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="AWS Certified" scheme="http://www.jibing57.com/categories/AWS-Certified/"/>
    
    
      <category term="Solutions Architect" scheme="http://www.jibing57.com/tags/Solutions-Architect/"/>
    
  </entry>
  
  <entry>
    <title>A Simple ELB Access Log Parser By Ruby</title>
    <link href="http://www.jibing57.com/2017/12/26/a-simple-elb-access-log-parser-by-ruby/"/>
    <id>http://www.jibing57.com/2017/12/26/a-simple-elb-access-log-parser-by-ruby/</id>
    <published>2017-12-26T12:35:29.000Z</published>
    <updated>2017-12-26T02:56:15.319Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;工作时候，偶尔会有手动检查ELB Access Log的时候，下载下来的access log是空格隔开的，人眼将数值对应到字段名非常累。&lt;/p&gt;
&lt;p&gt;就顺手写了个Ruby的小程序来解析access log的内容，转换到csv格式。再使用Excel打开csv文件来进行查看。&lt;/p&gt;
&lt;h3 id=&quot;用途&quot;&gt;&lt;a href=&quot;#用途&quot; class=&quot;headerlink&quot; title=&quot;用途&quot;&gt;&lt;/a&gt;用途&lt;/h3&gt;&lt;p&gt;读取access log日志，转换为csv。&lt;/p&gt;
&lt;p&gt;主要用于临时检查小数据量access log来定位问题。如果是基于access log来进行数据分析，还是需要结合RedShift来进行。&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="Ruby" scheme="http://www.jibing57.com/tags/Ruby/"/>
    
      <category term="Elastic Load Balancing" scheme="http://www.jibing57.com/tags/Elastic-Load-Balancing/"/>
    
  </entry>
  
  <entry>
    <title>shell gist to get http 5XX code from ELB access log</title>
    <link href="http://www.jibing57.com/2017/12/25/shell-gist-to-get-http-5XX-code-from-ELB-access-log/"/>
    <id>http://www.jibing57.com/2017/12/25/shell-gist-to-get-http-5XX-code-from-ELB-access-log/</id>
    <published>2017-12-25T14:09:24.000Z</published>
    <updated>2017-12-26T02:56:44.892Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一个简陋的只是够用的shell小脚本，用来从S3中下载前一天的ELB access log，筛选出http code为5XX的日志，然后发送给某个指定的email地址。&lt;/p&gt;
&lt;h3 id=&quot;变量设置&quot;&gt;&lt;a href=&quot;#变量设置&quot; class=&quot;headerlink&quot; title=&quot;变量设置&quot;&gt;&lt;/a&gt;变量设置&lt;/h3&gt;&lt;p&gt;设置下MAIL_TO和S3_BASE_PREFIX这两个变量，然后在有AWS CLI访问环境的机器上执行即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MAIL_TO 如果有多个地址，可用空格隔开&lt;/li&gt;
&lt;li&gt;S3_BASE_PREFIX设置到Access log日志格式之前的prefix就行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如完整的access log地址是: &lt;code&gt;s3://carl-elb-logs/AWSLogs/888888888888/elasticloadbalancing/ap-northeast-2/2017/12/24/704017765382_elasticloadbalancing_ap-northeast-2_ELB-carl_20171224T0120Z_13.125.86.136_5s9i5ef2.log&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;那么S3_BASE_PREFIX设置为&lt;code&gt;s3://carl-elb-logs/AWSLogs/888888888888/elasticloadbalancing/ap-northeast-2&lt;/code&gt;即可&lt;br&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://www.jibing57.com/categories/Shell/"/>
    
    
      <category term="Elastic Load Balancing" scheme="http://www.jibing57.com/tags/Elastic-Load-Balancing/"/>
    
  </entry>
  
  <entry>
    <title>在Freemind主题中开启图片阴影</title>
    <link href="http://www.jibing57.com/2017/12/25/how-to-add-shadow-of-images-in-freemind/"/>
    <id>http://www.jibing57.com/2017/12/25/how-to-add-shadow-of-images-in-freemind/</id>
    <published>2017-12-25T13:40:37.000Z</published>
    <updated>2017-12-25T07:03:34.076Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;添加图片阴影&quot;&gt;&lt;a href=&quot;#添加图片阴影&quot; class=&quot;headerlink&quot; title=&quot;添加图片阴影&quot;&gt;&lt;/a&gt;添加图片阴影&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/wzpan/hexo-theme-freemind&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-theme-freemind&lt;/a&gt;主题中，默认没有开启图片阴影。当图片的背景和文章的背景是同色的时候，有时会造成混淆，看不清楚哪部分是图片，哪部分是文章。&lt;/p&gt;
&lt;p&gt;打开源码看了一下，发现其实&lt;a href=&quot;https://github.com/wzpan/hexo-theme-freemind&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-theme-freemind&lt;/a&gt;本身就已经支持图片shadow了。只是默认没有开启，而且也没有在README.md中提及。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;hexo-theme-freemind/layout/_partial/article.ejs&lt;/code&gt;文件中有如下代码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;% if (item.shadow ) &amp;#123; %&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           img, video &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                -webkit-box-shadow:0 0 10px rgba(0, 0, 0, .5);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                -moz-box-shadow:0 0 10px rgba(0, 0, 0, .5);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                box-shadow:0 0 10px rgba(0, 0, 0, .5);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/style&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://www.jibing57.com/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="http://www.jibing57.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>什么是传统负载均衡器的访问日志</title>
    <link href="http://www.jibing57.com/2017/12/22/what-is-Access-Logs-of-Classic-Load-Balancer/"/>
    <id>http://www.jibing57.com/2017/12/22/what-is-Access-Logs-of-Classic-Load-Balancer/</id>
    <published>2017-12-22T07:26:12.000Z</published>
    <updated>2017-12-26T02:57:19.342Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是传统负载均衡器的Access-Logs&quot;&gt;&lt;a href=&quot;#什么是传统负载均衡器的Access-Logs&quot; class=&quot;headerlink&quot; title=&quot;什么是传统负载均衡器的Access Logs&quot;&gt;&lt;/a&gt;什么是传统负载均衡器的Access Logs&lt;/h3&gt;&lt;p&gt;Elastic Load Balancing 提供了Access Logs(访问日志)，Access Logs可记录下发送到负载均衡器的请求的详细信息。每个日志都包含固定格式的信息 (例如，收到请求的时间、客户端的 IP 地址、延迟、请求路径和服务器响应)。可以使用这些日志分析流量模式和进行Debug。&lt;/p&gt;
&lt;p&gt;Access Logs是ELB的一项可选功能，默认情况下是Disable的。启用后，ELB会将logs存储到指定的某个S3 Bucket中。&lt;/p&gt;
&lt;h3 id=&quot;收费&quot;&gt;&lt;a href=&quot;#收费&quot; class=&quot;headerlink&quot; title=&quot;收费&quot;&gt;&lt;/a&gt;收费&lt;/h3&gt;&lt;p&gt;ELB的Access Logs本身是不需要额外的费用的，从ELB传输到S3的流量是免费的，但是S3的存储费用是需要支付的。&lt;br&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="Elastic Load Balancing" scheme="http://www.jibing57.com/tags/Elastic-Load-Balancing/"/>
    
      <category term="S3" scheme="http://www.jibing57.com/tags/S3/"/>
    
  </entry>
  
  <entry>
    <title>如何在Elastic Beanstalk的Rails环境中配置staging.log为可下载</title>
    <link href="http://www.jibing57.com/2017/12/20/How-to-add-staging-log-to-EB-logs/"/>
    <id>http://www.jibing57.com/2017/12/20/How-to-add-staging-log-to-EB-logs/</id>
    <published>2017-12-20T15:32:43.000Z</published>
    <updated>2017-12-25T07:08:09.553Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;新建了一个EB环境，来跑一个staging模式的rails。EB环境变量设置好后，部署成功。一系列测试都没问题，结果却在一个不起眼的地方出了点幺蛾子。&lt;/p&gt;
&lt;p&gt;Rails代码中，没有特殊配置config.logger,因此staging模式时，默认的输出日志为logs/staging.log, 但是在EB的Web console中尝试获取Full Logs后，在BundleLogs中发现没有staging.log。&lt;/p&gt;
&lt;p&gt;赶紧调查试验了一下，并将调查结果记录如下。&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="Elastic Beanstalk" scheme="http://www.jibing57.com/tags/Elastic-Beanstalk/"/>
    
      <category term="Ruby" scheme="http://www.jibing57.com/tags/Ruby/"/>
    
      <category term="Rails" scheme="http://www.jibing57.com/tags/Rails/"/>
    
  </entry>
  
  <entry>
    <title>S3 RRS价格注意点</title>
    <link href="http://www.jibing57.com/2017/12/20/expired-of-S3-RRS/"/>
    <id>http://www.jibing57.com/2017/12/20/expired-of-S3-RRS/</id>
    <published>2017-12-20T13:33:58.000Z</published>
    <updated>2017-12-25T07:08:09.491Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;S3-存储类型&quot;&gt;&lt;a href=&quot;#S3-存储类型&quot; class=&quot;headerlink&quot; title=&quot;S3 存储类型&quot;&gt;&lt;/a&gt;S3 存储类型&lt;/h3&gt;&lt;p&gt;S3 总共提供三种存储类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标准(Standard)&lt;/li&gt;
&lt;li&gt;标准-低频率访问(Standard - Infrequent Access)&lt;/li&gt;
&lt;li&gt;低冗余存储(Reduced Redundancy Storage)
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="S3" scheme="http://www.jibing57.com/tags/S3/"/>
    
  </entry>
  
  <entry>
    <title>深挖AWS S3的权限管理(实验篇)</title>
    <link href="http://www.jibing57.com/2017/12/19/deep-dig-on-s3-bucket-permission-exam/"/>
    <id>http://www.jibing57.com/2017/12/19/deep-dig-on-s3-bucket-permission-exam/</id>
    <published>2017-12-19T13:54:56.000Z</published>
    <updated>2017-12-25T07:08:09.451Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;a href=&quot;/2017/12/14/deep-dig-on-s3-bucket-permission/&quot; title=&quot;深挖AWS S3的权限管理&quot;&gt;深挖AWS S3的权限管理&lt;/a&gt; 一文中介绍了AWS S3权限管理的三种方法。此处再通过几个实验来看下三种方法的使用方法。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;实验前准备&quot;&gt;&lt;a href=&quot;#实验前准备&quot; class=&quot;headerlink&quot; title=&quot;实验前准备&quot;&gt;&lt;/a&gt;实验前准备&lt;/h3&gt;&lt;h4 id=&quot;实验用相关账号介绍&quot;&gt;&lt;a href=&quot;#实验用相关账号介绍&quot; class=&quot;headerlink&quot; title=&quot;实验用相关账号介绍&quot;&gt;&lt;/a&gt;实验用相关账号介绍&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;IAM User carl.shen - carl.shen有AdministratorAccess权限，用来上传图片到S3&lt;/li&gt;
&lt;li&gt;IAM User carl - 测试IAM User一号，初始没有任何权限&lt;/li&gt;
&lt;li&gt;IAM User shen - 测试IAM User二号，初始没有任何权限&lt;/li&gt;
&lt;li&gt;IAM Group S3Exam - 用来给IAM User carl和shen统一赋权限&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建好三个IAM账号，下载各自的Access key ID和Secret Access Key, 并设置好AWS CLI。AWS CLI多profile的设置方法可以参照 &lt;a href=&quot;/2017/10/24/how-to-use-aws-cli-with-multi-user/&quot; title=&quot;如何在aws cli中使用多个配置文件&quot;&gt;如何在aws cli中使用多个配置文件&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="S3" scheme="http://www.jibing57.com/tags/S3/"/>
    
      <category term="AWS CLI" scheme="http://www.jibing57.com/tags/AWS-CLI/"/>
    
      <category term="AWS Deep Dive" scheme="http://www.jibing57.com/tags/AWS-Deep-Dive/"/>
    
  </entry>
  
  <entry>
    <title>深挖AWS S3的权限管理</title>
    <link href="http://www.jibing57.com/2017/12/14/deep-dig-on-s3-bucket-permission/"/>
    <id>http://www.jibing57.com/2017/12/14/deep-dig-on-s3-bucket-permission/</id>
    <published>2017-12-14T12:48:26.000Z</published>
    <updated>2017-12-25T07:08:09.473Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;AWS共有三种方式用来管理S3的访问权限&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IAM policy&lt;/li&gt;
&lt;li&gt;Bucket Policy&lt;/li&gt;
&lt;li&gt;S3 ACL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此处深挖一下这三种访问控制的用法和区别&lt;/p&gt;
&lt;h3 id=&quot;三种访问控制的介绍&quot;&gt;&lt;a href=&quot;#三种访问控制的介绍&quot; class=&quot;headerlink&quot; title=&quot;三种访问控制的介绍&quot;&gt;&lt;/a&gt;三种访问控制的介绍&lt;/h3&gt;&lt;p&gt;S3的三种访问控制如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IAM Policy, 是基于用户层面的控制，attach to IAM实体(User, Role或Group),规定了谁能对哪些S3做什么操作&lt;/li&gt;
&lt;li&gt;Bucket Policy, 是基于Bucket层面的控制, attach to Bucket, 规定了哪些人能对我这个Bucket中的resource做什么操作。&lt;/li&gt;
&lt;li&gt;S3 ACL, 是基于Bucket或单个对象的，规定了谁能对我这个Bucket或对象做什么操作。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="S3" scheme="http://www.jibing57.com/tags/S3/"/>
    
      <category term="AWS Deep Dive" scheme="http://www.jibing57.com/tags/AWS-Deep-Dive/"/>
    
  </entry>
  
  <entry>
    <title>使用shell添加多行到文件的几个办法</title>
    <link href="http://www.jibing57.com/2017/12/12/how-to-write-multiline-to-file-by-shell/"/>
    <id>http://www.jibing57.com/2017/12/12/how-to-write-multiline-to-file-by-shell/</id>
    <published>2017-12-12T13:51:21.000Z</published>
    <updated>2017-12-25T07:09:02.985Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;使用shell添加多行到某个文件的几个办法, 启动EC2设置User Data时可能会用到。&lt;/p&gt;
&lt;h4 id=&quot;方法一-逐行echo添加&quot;&gt;&lt;a href=&quot;#方法一-逐行echo添加&quot; class=&quot;headerlink&quot; title=&quot;方法一: 逐行echo添加&quot;&gt;&lt;/a&gt;方法一: 逐行echo添加&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;echo &amp;apos;#!/bin/bash&amp;apos; &amp;gt; way1.sh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;echo &amp;apos;export PATH=$PATH:~/bin/&amp;apos; &amp;gt;&amp;gt; way1.sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看文件内容为:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cat way1.sh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#!/bin/bash&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;export PATH=$PATH:~/bin/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://www.jibing57.com/categories/Shell/"/>
    
    
      <category term="EC2 User Data" scheme="http://www.jibing57.com/tags/EC2-User-Data/"/>
    
  </entry>
  
</feed>

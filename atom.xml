<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Recording</title>
  
  <subtitle>Recording, Sharing, TimeSaving -- 一切成本皆时间</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jibing57.com/"/>
  <updated>2018-09-16T07:03:13.813Z</updated>
  <id>http://www.jibing57.com/</id>
  
  <author>
    <name>jibing57</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用ssh隧道访问内网资源</title>
    <link href="http://www.jibing57.com/2018/09/15/how-to-access-internal-by-ssh-tunnel/"/>
    <id>http://www.jibing57.com/2018/09/15/how-to-access-internal-by-ssh-tunnel/</id>
    <published>2018-09-15T06:31:21.000Z</published>
    <updated>2018-09-16T07:03:13.813Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;日常开发过程中，会遇到一些情况需要和对端机构或公司进行联调。此时有可能会需要访问对端机构内部的一些网页或API。&lt;/p&gt;
&lt;p&gt;正规流程中，要访问内网，如果对端机构有VPN服务，应该是申请一个VPN来进行操作，这种方式比较安全可靠。但实际操作过程中，可能对端机构没有VPN服务，或者走VPN流程繁琐。此时如果你有对端机构中某个内网Linux机器的ssh登陆权限,而且该Linux机器可以可以访问相关网页或者API，则可以通过ssh tunnel的方式，临时来访问对端机构的内部资源。&lt;/p&gt;
&lt;p&gt;接下来，通过使用两台EC2来模拟内网环境,来介绍如何在Mac机器上使用ssh tunnel访问内网资源。&lt;/p&gt;
&lt;h3 id=&quot;搭建说明&quot;&gt;&lt;a href=&quot;#搭建说明&quot; class=&quot;headerlink&quot; title=&quot;搭建说明&quot;&gt;&lt;/a&gt;搭建说明&lt;/h3&gt;&lt;h4 id=&quot;搭建模拟用的EC2&quot;&gt;&lt;a href=&quot;#搭建模拟用的EC2&quot; class=&quot;headerlink&quot; title=&quot;搭建模拟用的EC2&quot;&gt;&lt;/a&gt;搭建模拟用的EC2&lt;/h4&gt;&lt;p&gt;首先，开启两台EC2，一台用来模拟ssh的跳板机(Jumpbox)，一台用来模拟内部网页服务器(HttpServer)。&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://www.jibing57.com/categories/Tools/"/>
    
    
      <category term="EC2" scheme="http://www.jibing57.com/tags/EC2/"/>
    
      <category term="MacOS" scheme="http://www.jibing57.com/tags/MacOS/"/>
    
      <category term="SSH" scheme="http://www.jibing57.com/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>由于EC2中no space left引起的EB警报</title>
    <link href="http://www.jibing57.com/2018/08/11/EB-warning-due-to-no-space-left-on-device-issue-on-EC2/"/>
    <id>http://www.jibing57.com/2018/08/11/EB-warning-due-to-no-space-left-on-device-issue-on-EC2/</id>
    <published>2018-08-11T12:12:13.000Z</published>
    <updated>2018-08-30T05:02:58.269Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题现象&quot;&gt;&lt;a href=&quot;#问题现象&quot; class=&quot;headerlink&quot; title=&quot;问题现象&quot;&gt;&lt;/a&gt;问题现象&lt;/h3&gt;&lt;p&gt;周末早上突然收到大量Elastic Beanstalk的警报邮件，提示一个跑Rails的EB环境中有大量的请求是HTTP 5xx。&lt;/p&gt;
&lt;p&gt;登陆AWS Console查看相关Event，已经有持续的WARN提示有大量的HTTP 5xx请求。&lt;br&gt;&lt;img src=&quot;/images/AWS/EBNoSpaceLeft/amounts_of_5XX_on_EB_event.png&quot; alt=&quot;amounts_of_5XX_on_EB_event&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;解决过程&quot;&gt;&lt;a href=&quot;#解决过程&quot; class=&quot;headerlink&quot; title=&quot;解决过程&quot;&gt;&lt;/a&gt;解决过程&lt;/h3&gt;&lt;p&gt;使用EB console下载了各个Instanc的日志，仔细进行排查。&lt;/p&gt;
&lt;p&gt;最后在一个Instance的Rails log中发现有请求提示&lt;code&gt;No space left on device&lt;/code&gt;。原来是Instance的磁盘满了，导致了部分需要写临时文件的请求失败了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;F, [2018-08-11T02:10:43.084147 #11559] FATAL -- :&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Errno::ENOSPC (No space left on device @ rb_sysopen - /var/app/current/tmp/cache/rack%3A%3Aattack%3A306790688%3Alocations%2Fip%3A46.229.168.8120180811-11559-4156fj):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  app/middleware/catch_json_parse_errors.rb:8:in `call&amp;apos;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="Elastic Beanstalk" scheme="http://www.jibing57.com/tags/Elastic-Beanstalk/"/>
    
      <category term="EC2" scheme="http://www.jibing57.com/tags/EC2/"/>
    
      <category term="AutoScaling" scheme="http://www.jibing57.com/tags/AutoScaling/"/>
    
  </entry>
  
  <entry>
    <title>macOS 10.13.2下SSH命令Invalid key length错误的原因</title>
    <link href="http://www.jibing57.com/2018/05/21/ssh-key-Invalid-key-length-Error-on-Macos/"/>
    <id>http://www.jibing57.com/2018/05/21/ssh-key-Invalid-key-length-Error-on-Macos/</id>
    <published>2018-05-21T11:53:07.000Z</published>
    <updated>2018-05-23T06:48:46.315Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;升级到Macos 10.13.2后，使用ssh以key方式登陆一个12年配置的服务器的时候，ssh命令报告了&lt;code&gt;Invalid key length&lt;/code&gt;的错误。&lt;/p&gt;
&lt;p&gt;很是纳闷，服务器和本地的key都是配置好后就没动过的，key pair本身肯定没问题啊，怎么会报错了呢?&lt;/p&gt;
&lt;h3 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h3&gt;&lt;p&gt;Google了一下，发现是MacOS使用的OpenSSH版本升级到了7.6，小于1024bits的RSA keys已经不被支持了。&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;ssh-keygen&lt;/code&gt;查看了一下public key，发现是1023bit的。所以ssh时候报了&lt;code&gt;Invalid key length&lt;/code&gt;的错误。&lt;/p&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://www.jibing57.com/categories/Shell/"/>
    
    
      <category term="MacOS" scheme="http://www.jibing57.com/tags/MacOS/"/>
    
      <category term="SSH" scheme="http://www.jibing57.com/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>macOS 10.13 High Sierra读写NTFS移动硬盘</title>
    <link href="http://www.jibing57.com/2018/05/10/how-to-write-NTFS-Deives-on-a-Mac-10.13/"/>
    <id>http://www.jibing57.com/2018/05/10/how-to-write-NTFS-Deives-on-a-Mac-10.13/</id>
    <published>2018-05-10T12:30:07.000Z</published>
    <updated>2018-05-14T06:55:13.357Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;系统升级到10.13后，没用过移动硬盘，所以一直也没发现以前装的osxfuse+ntfs-3g在系统更新后已经失效了。结果么在要使用的时候发现悲剧了，在10.13中没法写NTFT格式的移动硬盘了。&lt;/p&gt;
&lt;p&gt;上网搜了一下，How-To Geek上面有一篇文章，详细讲述了Macos下挂载NTFS移动硬盘的几种方法,有收费方案也有免费方案，并比较了每个方案的优缺点。 虽然文章是基于macOS 10.12 Sierra的，但各个方案的优缺点同样适用于10.13。&lt;a href=&quot;https://www.howtogeek.com/236055/how-to-write-to-ntfs-drives-on-a-mac/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to Write to NTFS Drives on a Mac&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://www.jibing57.com/categories/Tools/"/>
    
    
      <category term="MacOS" scheme="http://www.jibing57.com/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>Mac下几个处理图片的命令</title>
    <link href="http://www.jibing57.com/2018/04/25/command-line-tools-to-check-images-on-macos/"/>
    <id>http://www.jibing57.com/2018/04/25/command-line-tools-to-check-images-on-macos/</id>
    <published>2018-04-25T14:49:01.000Z</published>
    <updated>2018-04-27T08:11:54.020Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h3&gt;&lt;p&gt;Macos下，查看图片，默认就是使用Preview。Preview基本包含了普通人能用到的各种功能。&lt;br&gt;但有时候需要批量处理图片时，常规的GUI工具会显得不太方便，使用命令来操作能够更快捷高效。下面介绍几个Macos下和图片相关的几个命令。&lt;/p&gt;
&lt;h3 id=&quot;查看图片尺寸&quot;&gt;&lt;a href=&quot;#查看图片尺寸&quot; class=&quot;headerlink&quot; title=&quot;查看图片尺寸&quot;&gt;&lt;/a&gt;查看图片尺寸&lt;/h3&gt;&lt;h4 id=&quot;系统自带file命令&quot;&gt;&lt;a href=&quot;#系统自带file命令&quot; class=&quot;headerlink&quot; title=&quot;系统自带file命令&quot;&gt;&lt;/a&gt;系统自带file命令&lt;/h4&gt;&lt;p&gt;在命令行下查看图片的分辨率，可以直接使用Macos自带的file命令即可。&lt;br&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://www.jibing57.com/categories/Shell/"/>
    
    
      <category term="MacOS" scheme="http://www.jibing57.com/tags/MacOS/"/>
    
      <category term="Image" scheme="http://www.jibing57.com/tags/Image/"/>
    
  </entry>
  
  <entry>
    <title>豆瓣图片403问题</title>
    <link href="http://www.jibing57.com/2018/04/24/douban-image-403/"/>
    <id>http://www.jibing57.com/2018/04/24/douban-image-403/</id>
    <published>2018-04-24T12:14:50.000Z</published>
    <updated>2018-04-25T02:37:13.744Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;起由&quot;&gt;&lt;a href=&quot;#起由&quot; class=&quot;headerlink&quot; title=&quot;起由&quot;&gt;&lt;/a&gt;起由&lt;/h3&gt;&lt;p&gt;发布了一版blog到github上。偶然间发现&lt;a href=&quot;/douban&quot;&gt;豆瓣页面&lt;/a&gt;中书的图片都无法显示了。打开Inspector调查了下，发现请求豆瓣图片的链接返回的都是403 Forbidden。&lt;br&gt;&lt;img src=&quot;/images/Hexo/douban_image_403.png&quot; alt=&quot;douban_image_403.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;网上搜索了一下，可能的原因就是豆瓣为了封杀微信小程序在页面上直接请求豆瓣的图片，封杀了图片的外链。&lt;/p&gt;
&lt;h3 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h3&gt;&lt;p&gt;尝试着将豆瓣API返回的图片链接拷贝到浏览器中直接访问，发现可以加载图片，那估计豆瓣是通过检测HTTP Request中的referer Header来实现防盗链。&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://www.jibing57.com/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="http://www.jibing57.com/tags/Hexo/"/>
    
      <category term="Douban" scheme="http://www.jibing57.com/tags/Douban/"/>
    
      <category term="Nodejs" scheme="http://www.jibing57.com/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>S3进阶系列(二) ——权限管理</title>
    <link href="http://www.jibing57.com/2018/04/21/aws-s3-master-permission/"/>
    <id>http://www.jibing57.com/2018/04/21/aws-s3-master-permission/</id>
    <published>2018-04-21T09:59:59.000Z</published>
    <updated>2018-04-23T02:59:55.711Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是S3的权限管理&quot;&gt;&lt;a href=&quot;#什么是S3的权限管理&quot; class=&quot;headerlink&quot; title=&quot;什么是S3的权限管理&quot;&gt;&lt;/a&gt;什么是S3的权限管理&lt;/h3&gt;&lt;p&gt;S3的权限管理是任何使用S3的人都无法绕开的功能,决定了S3中的Object是否能够被访问。&lt;/p&gt;
&lt;p&gt;权限管理本质上解决了这么一个问题: 谁(Principal)能够在何种条件(condition)下被允许或拒绝(Effect)对哪些资源(Resource)做何种操作(Action)&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="IAM" scheme="http://www.jibing57.com/tags/IAM/"/>
    
      <category term="S3" scheme="http://www.jibing57.com/tags/S3/"/>
    
      <category term="AWS CLI" scheme="http://www.jibing57.com/tags/AWS-CLI/"/>
    
  </entry>
  
  <entry>
    <title>如何去除SSH key中的passphrase</title>
    <link href="http://www.jibing57.com/2018/04/19/how-to-remove-the-passphrase-of-ssh-key/"/>
    <id>http://www.jibing57.com/2018/04/19/how-to-remove-the-passphrase-of-ssh-key/</id>
    <published>2018-04-19T13:15:28.000Z</published>
    <updated>2018-04-19T08:15:06.891Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;去除passphrase的方法&quot;&gt;&lt;a href=&quot;#去除passphrase的方法&quot; class=&quot;headerlink&quot; title=&quot;去除passphrase的方法&quot;&gt;&lt;/a&gt;去除passphrase的方法&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;ssh-keygen&lt;/code&gt;来重新设置一个空的passphrase, 就相当于去除了原来的passphrase, 答案来自&lt;a href=&quot;https://stackoverflow.com/a/112409&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow&lt;/a&gt;, 回答者还很贴心的提示，输入的passphrase会被记录在~/.bash_history中，别忘记处理这个情况。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ ssh-keygen -p [-P old_passphrase] [-N new_passphrase] [-f keyfile]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://www.jibing57.com/categories/Shell/"/>
    
    
      <category term="Linux" scheme="http://www.jibing57.com/tags/Linux/"/>
    
      <category term="SSH" scheme="http://www.jibing57.com/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>S3进阶系列(一) —— S3基础知识</title>
    <link href="http://www.jibing57.com/2018/04/18/aws-s3-master-basic/"/>
    <id>http://www.jibing57.com/2018/04/18/aws-s3-master-basic/</id>
    <published>2018-04-18T12:44:08.000Z</published>
    <updated>2018-04-20T03:22:02.880Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;S3是AWS服务最早推出的几项服务之一，也是使用最为频繁的几个AWS服务之一。官网文档以及网上文章零零散散看了不少,实际使用中也用过S3的大多数功能，但“纸上得来终觉浅，绝知此事要躬行”，决定给自己挖个坑，结合已读资料和实际使用经验，系统地来梳理一下S3的已有功能。&lt;/p&gt;
&lt;p&gt;本篇是第一篇,介绍一下S3的一些基础知识。希望能够坚持把这个系列写完。&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="S3" scheme="http://www.jibing57.com/tags/S3/"/>
    
  </entry>
  
  <entry>
    <title>订阅RDS事件</title>
    <link href="http://www.jibing57.com/2018/03/16/how-to-subscribe-RDS-event/"/>
    <id>http://www.jibing57.com/2018/03/16/how-to-subscribe-RDS-event/</id>
    <published>2018-03-16T12:22:54.000Z</published>
    <updated>2018-03-19T02:40:03.535Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;关于RDS状态的监控，除了常规的CloudWatch Metric以外。RDS还有一个事件机制，能够将RDS的事件通知到SNS。&lt;/p&gt;
&lt;h3 id=&quot;RDS-Event简介&quot;&gt;&lt;a href=&quot;#RDS-Event简介&quot; class=&quot;headerlink&quot; title=&quot;RDS Event简介&quot;&gt;&lt;/a&gt;RDS Event简介&lt;/h3&gt;&lt;h4 id=&quot;RDS-Event-Source-type&quot;&gt;&lt;a href=&quot;#RDS-Event-Source-type&quot; class=&quot;headerlink&quot; title=&quot;RDS Event - Source type&quot;&gt;&lt;/a&gt;RDS Event - Source type&lt;/h4&gt;&lt;p&gt;RDS的事件类型分为如下六大类:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据库实例(DB instance)&lt;/li&gt;
&lt;li&gt;数据库集群(DB cluster)&lt;/li&gt;
&lt;li&gt;数据库快照(DB snapshot)&lt;/li&gt;
&lt;li&gt;数据库集群快照(DB cluster snapshot)&lt;/li&gt;
&lt;li&gt;数据库安全组(DB security group)&lt;/li&gt;
&lt;li&gt;数据库参数组(DB parameter group)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="RDS" scheme="http://www.jibing57.com/tags/RDS/"/>
    
  </entry>
  
  <entry>
    <title>在Chrome中设置Google搜索为NoCountryRedirect</title>
    <link href="http://www.jibing57.com/2018/03/15/how-to-set-chrome-to-use-google-with-NoCountryRedirect/"/>
    <id>http://www.jibing57.com/2018/03/15/how-to-set-chrome-to-use-google-with-NoCountryRedirect/</id>
    <published>2018-03-15T12:01:18.000Z</published>
    <updated>2018-03-15T06:48:36.135Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;添加代理来科学上网时，使用Google进行搜索，Chrome浏览器默认会重定向到代理国所在的Google域名。比如&lt;code&gt;https://www.google.co.kr/&lt;/code&gt;,&lt;code&gt;https://www.google.co.jp/&lt;/code&gt;等, 已经在&lt;code&gt;www.google.com&lt;/code&gt;登录的Google账号就还得重登, 极度烦躁。&lt;/p&gt;
&lt;p&gt;下面是几个固定使用&lt;code&gt;www.google.com&lt;/code&gt;来进行搜索的方法&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://www.jibing57.com/categories/Tools/"/>
    
    
      <category term="Chrome" scheme="http://www.jibing57.com/tags/Chrome/"/>
    
  </entry>
  
  <entry>
    <title>AWS RDS recovery due to issue with underlying hardware</title>
    <link href="http://www.jibing57.com/2018/03/14/AWS-RDS-recovery-due-to-issue-with-underlying-hardware/"/>
    <id>http://www.jibing57.com/2018/03/14/AWS-RDS-recovery-due-to-issue-with-underlying-hardware/</id>
    <published>2018-03-14T13:27:54.000Z</published>
    <updated>2018-03-15T03:19:52.367Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;早上刚上班就收到一封主题为”RDS Notification Message”的订阅邮件，message内容为”Recovery of the DB instance has started. Recovery time will vary with the amount of data to be recovered”。&lt;/p&gt;
&lt;p&gt;上Web Console查看发生了什么事，发现RDS已经自我恢复完毕了。最新的Event消息提示为”Recovery of the DB instance is complete.”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/AWS/RDS/rds_recovery_event.png&quot; alt=&quot;rds_recovery_event&quot;&gt;&lt;/p&gt;
&lt;p&gt;提了Case询问了下，也在网上搜了一下，基本搞清楚了是怎么个回事，记录如下。&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="RDS" scheme="http://www.jibing57.com/tags/RDS/"/>
    
      <category term="Failover" scheme="http://www.jibing57.com/tags/Failover/"/>
    
  </entry>
  
  <entry>
    <title>EC2底层硬件Retirement的处理方法</title>
    <link href="http://www.jibing57.com/2018/03/12/how-to-handle-Retirement-Notification-Amazon-EC2-Instance-scheduled-for-retirement/"/>
    <id>http://www.jibing57.com/2018/03/12/how-to-handle-Retirement-Notification-Amazon-EC2-Instance-scheduled-for-retirement/</id>
    <published>2018-03-12T14:10:54.000Z</published>
    <updated>2018-03-12T14:19:11.395Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;AWS的EC2的实例是在物理机上虚拟化出来的，当承载EC2的物理机出现问题或者要退役时，AWS会发送一封主题为&lt;strong&gt;[Retirement Notification] Amazon EC2 Instance scheduled for retirement&lt;/strong&gt;的email到AWS Account的注册邮箱中。&lt;/p&gt;
&lt;p&gt;以前多次收到过这类邮件，但提示的目标instance-ID都是AutoScaling中运行的EC2，而AutoScaling中的Instance自动伸缩不会影响业务，因此也从没有主动去处理过。&lt;/p&gt;
&lt;p&gt;这次突然收到通知邮件，说一台运行后台任务的Instance的underlying hardware hosting出问题了。在此记录一下相关的现象和解决方法。&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="EC2" scheme="http://www.jibing57.com/tags/EC2/"/>
    
  </entry>
  
  <entry>
    <title>使用seed将csv格式的db文件导入DB</title>
    <link href="http://www.jibing57.com/2018/02/11/a-way-to-use-csv-file-to-populate-the-database-by-rake-db-seed-on-rails/"/>
    <id>http://www.jibing57.com/2018/02/11/a-way-to-use-csv-file-to-populate-the-database-by-rake-db-seed-on-rails/</id>
    <published>2018-02-11T14:00:33.000Z</published>
    <updated>2018-02-11T10:05:51.406Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一段将csv格式的db文件导入对应表结构的代码。&lt;/p&gt;
&lt;h3 id=&quot;前提要求&quot;&gt;&lt;a href=&quot;#前提要求&quot; class=&quot;headerlink&quot; title=&quot;前提要求&quot;&gt;&lt;/a&gt;前提要求&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;csv文件名字和Model Class需要一一对应， 比如用户表users, Model中定义是&lt;code&gt;class User &amp;lt; ActiveRecord::Base&lt;/code&gt;, 那么csv文件名字得是user.csv&lt;/li&gt;
&lt;li&gt;csv文件需要有header,并且header名字需要同数据库中对应表的字段名相同&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Code" scheme="http://www.jibing57.com/categories/Code/"/>
    
    
      <category term="Ruby" scheme="http://www.jibing57.com/tags/Ruby/"/>
    
      <category term="Rails" scheme="http://www.jibing57.com/tags/Rails/"/>
    
  </entry>
  
  <entry>
    <title>使用AWS CLI来备份和恢复S3 Bucket的ACL</title>
    <link href="http://www.jibing57.com/2018/02/11/aws-s3-cli-to-backup-and-restore-bucket-acl/"/>
    <id>http://www.jibing57.com/2018/02/11/aws-s3-cli-to-backup-and-restore-bucket-acl/</id>
    <published>2018-02-11T12:43:43.000Z</published>
    <updated>2018-02-11T10:08:02.977Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;S3 Bucket层面的权限管理，推荐使用Bucket Policy来管理，但可能会有一些遗留的S3 Bucket, 还使用着Bucket ACL来进行权限管理。&lt;/p&gt;
&lt;p&gt;在将Bucket ACl升级为Bucket Policy或者是更新Bucket ACL的时候，会有备份Bucket ACL的需求。此处介绍一下如何使用AWS CLI来备份和恢复Bucket的Bucket ACL。&lt;/p&gt;
&lt;h3 id=&quot;备份-Bucket-ACL&quot;&gt;&lt;a href=&quot;#备份-Bucket-ACL&quot; class=&quot;headerlink&quot; title=&quot;备份 Bucket ACL&quot;&gt;&lt;/a&gt;备份 Bucket ACL&lt;/h3&gt;&lt;p&gt;使用CLI中s3api中的&lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/reference/s3api/get-bucket-acl.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;get-bucket-acl&lt;/a&gt;命令来保存bucket acl。&lt;/p&gt;
&lt;h4 id=&quot;用法&quot;&gt;&lt;a href=&quot;#用法&quot; class=&quot;headerlink&quot; title=&quot;用法&quot;&gt;&lt;/a&gt;用法&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;  get-bucket-acl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--bucket &amp;lt;value&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[--cli-input-json &amp;lt;value&amp;gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[--generate-cli-skeleton &amp;lt;value&amp;gt;]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="S3" scheme="http://www.jibing57.com/tags/S3/"/>
    
      <category term="AWS CLI" scheme="http://www.jibing57.com/tags/AWS-CLI/"/>
    
  </entry>
  
  <entry>
    <title>Macos下如何实现grep的非贪婪模式</title>
    <link href="http://www.jibing57.com/2018/02/09/non-greedy-match-in-grep-on-macos/"/>
    <id>http://www.jibing57.com/2018/02/09/non-greedy-match-in-grep-on-macos/</id>
    <published>2018-02-09T13:10:43.000Z</published>
    <updated>2018-02-09T09:16:23.889Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;有时候需要使用正则的&lt;code&gt;非贪婪模式(non-greedy或者叫lazy模式)&lt;/code&gt;来搜一些内容，但Macos系统自带的&lt;code&gt;grep&lt;/code&gt;无法胜任。&lt;br&gt;Mac下的&lt;code&gt;grep&lt;/code&gt;是BSD系的，不能使用-P参数来使用perl模式。Linux下的&lt;code&gt;GNU grep&lt;/code&gt;就可以使用-P参数来支持非贪婪模式。&lt;/p&gt;
&lt;p&gt;MacOS自带的&lt;code&gt;grep&lt;/code&gt;的示例:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cat grep_on_macos.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;carl has a nice car. the car has four wheels.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 支持普通正则&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ grep -o &amp;quot;car.*has&amp;quot; grep_on_macos.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;carl has a nice car. the car has&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 不支持带?的非贪婪模式&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ grep -o &amp;quot;car.*?has&amp;quot; grep_on_macos.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此处记录两个可行的方法来解决该问题&lt;/p&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://www.jibing57.com/categories/Shell/"/>
    
    
      <category term="MacOS" scheme="http://www.jibing57.com/tags/MacOS/"/>
    
      <category term="Linux" scheme="http://www.jibing57.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>AWS Certified Solutions Architect - Professional Road Map</title>
    <link href="http://www.jibing57.com/2018/02/07/AWS-Certified-Solutions-Architect-Professional/"/>
    <id>http://www.jibing57.com/2018/02/07/AWS-Certified-Solutions-Architect-Professional/</id>
    <published>2018-02-07T07:27:17.000Z</published>
    <updated>2018-02-11T17:18:12.338Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Official-AWS-Certification-Page&quot;&gt;&lt;a href=&quot;#Official-AWS-Certification-Page&quot; class=&quot;headerlink&quot; title=&quot;Official AWS Certification Page&quot;&gt;&lt;/a&gt;Official AWS Certification Page&lt;/h2&gt;&lt;p&gt;访问官网&lt;a href=&quot;https://amazonaws-china.com/certification/certification-prep/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AWS Certification&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参加 AWS 培训课程&lt;/li&gt;
&lt;li&gt;查看考试指南和样题&lt;ul&gt;
&lt;li&gt;了解考试涉及的概念并整体了解需要学习哪些内容, &lt;a href=&quot;http://d0.awsstatic-china.com/Train%20&amp;amp;%20Cert/docs/AWS_certified_solutions_architect_professional_blueprint.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AWS Certified Solutions Architect – Professional 考试指南&lt;/a&gt; 相当于考试大纲, 必看,而且需要反复的看。因为学习过一阵后再来看Guide，会有更深的体会。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://d0.awsstatic-china.com/training-and-certification/docs/AWS_certified_solutions_architect_professional_examsample.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;考试样题&lt;/a&gt;用于熟悉题目题型。几个样题都是大段大段的文字，实际考试题目中也有字数少的题目。但题目的阅读量绝对是比Asoocaiated的大得多。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;练习试验&lt;ul&gt;
&lt;li&gt;注册一个AWS全球账号，使用一年的免费额度结合Blueprint中的各个内容进行试验。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;学习 AWS 白皮书&lt;ul&gt;
&lt;li&gt;白皮书是纯英文的，每个白皮书篇幅都很长。&lt;/li&gt;
&lt;li&gt;在BluePrint的描述中，和AWS Certified Solutions Architect - Associate的白皮书列表相比，多了&lt;strong&gt;Defining Fault Tolerant Applications in the AWS Cloud&lt;/strong&gt;这一份白皮书，官网找了一下，只有一个名字类似的名为&lt;a href=&quot;https://d1.awsstatic.com/whitepapers/aws-building-fault-tolerant-applications.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Building Fault-Tolerant Applications on AWS&lt;/a&gt;的白皮书，时间还是October 2011的。不管怎样，但愿好理念永不过时，还是整个念一遍吧。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;查看 AWS 常见问题&lt;ul&gt;
&lt;li&gt;官网推荐的FAQ都建议看完。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;参加模拟考试&lt;ul&gt;
&lt;li&gt;40美刀一次。是否值得因人而异。参加Professional的考试，肯定都已经经历过AWS Certified Solutions Architect – Associate的洗礼了, 因此熟悉考试界面肯定不是决定要参加模拟考试的目的。一个合理的理由是，可以提前熟悉一下Professional考题阅读难度, 为正式考试的时候做好心理准备。网上都说AWS Certified Solutions Architect – Professional这个考试最大的难度就是要在170分钟内阅读，理解77~80道字数不算少的题，然后选出最优的答案。网上一些母语是英语的老外都感慨阅读量比较大，何况是我们这种非英语系的国家的考生了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;报名考试并获得认证&lt;ul&gt;
&lt;li&gt;登陆&lt;a href=&quot;https://www.aws.training/certification&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.aws.training/certification&lt;/a&gt;注册进行考试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="AWS Certified" scheme="http://www.jibing57.com/categories/AWS-Certified/"/>
    
    
      <category term="Solutions Architect" scheme="http://www.jibing57.com/tags/Solutions-Architect/"/>
    
  </entry>
  
  <entry>
    <title>A Simple ELB Access Log Parser By Ruby</title>
    <link href="http://www.jibing57.com/2017/12/26/a-simple-elb-access-log-parser-by-ruby/"/>
    <id>http://www.jibing57.com/2017/12/26/a-simple-elb-access-log-parser-by-ruby/</id>
    <published>2017-12-26T12:35:29.000Z</published>
    <updated>2018-09-04T11:39:01.545Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;工作时候，偶尔会有手动检查ELB Access Log的时候，下载下来的access log是空格隔开的，人眼将数值对应到字段名非常累。&lt;/p&gt;
&lt;p&gt;就顺手写了个Ruby的小程序来解析access log的内容，转换到csv格式。再使用Excel打开csv文件来进行查看。&lt;/p&gt;
&lt;h3 id=&quot;用途&quot;&gt;&lt;a href=&quot;#用途&quot; class=&quot;headerlink&quot; title=&quot;用途&quot;&gt;&lt;/a&gt;用途&lt;/h3&gt;&lt;p&gt;读取access log日志，转换为csv。&lt;/p&gt;
&lt;p&gt;主要用于临时检查小数据量access log来定位问题。如果是基于access log来进行数据分析，还是需要结合RedShift来进行。&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="Ruby" scheme="http://www.jibing57.com/tags/Ruby/"/>
    
      <category term="Elastic Load Balancing" scheme="http://www.jibing57.com/tags/Elastic-Load-Balancing/"/>
    
  </entry>
  
  <entry>
    <title>shell gist to get http 5XX code from ELB access log</title>
    <link href="http://www.jibing57.com/2017/12/25/shell-gist-to-get-http-5XX-code-from-ELB-access-log/"/>
    <id>http://www.jibing57.com/2017/12/25/shell-gist-to-get-http-5XX-code-from-ELB-access-log/</id>
    <published>2017-12-25T14:09:24.000Z</published>
    <updated>2017-12-26T02:56:44.892Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一个简陋的只是够用的shell小脚本，用来从S3中下载前一天的ELB access log，筛选出http code为5XX的日志，然后发送给某个指定的email地址。&lt;/p&gt;
&lt;h3 id=&quot;变量设置&quot;&gt;&lt;a href=&quot;#变量设置&quot; class=&quot;headerlink&quot; title=&quot;变量设置&quot;&gt;&lt;/a&gt;变量设置&lt;/h3&gt;&lt;p&gt;设置下MAIL_TO和S3_BASE_PREFIX这两个变量，然后在有AWS CLI访问环境的机器上执行即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MAIL_TO 如果有多个地址，可用空格隔开&lt;/li&gt;
&lt;li&gt;S3_BASE_PREFIX设置到Access log日志格式之前的prefix就行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如完整的access log地址是: &lt;code&gt;s3://carl-elb-logs/AWSLogs/888888888888/elasticloadbalancing/ap-northeast-2/2017/12/24/704017765382_elasticloadbalancing_ap-northeast-2_ELB-carl_20171224T0120Z_13.125.86.136_5s9i5ef2.log&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;那么S3_BASE_PREFIX设置为&lt;code&gt;s3://carl-elb-logs/AWSLogs/888888888888/elasticloadbalancing/ap-northeast-2&lt;/code&gt;即可&lt;br&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://www.jibing57.com/categories/Shell/"/>
    
    
      <category term="Elastic Load Balancing" scheme="http://www.jibing57.com/tags/Elastic-Load-Balancing/"/>
    
  </entry>
  
  <entry>
    <title>在Freemind主题中开启图片阴影</title>
    <link href="http://www.jibing57.com/2017/12/25/how-to-add-shadow-of-images-in-freemind/"/>
    <id>http://www.jibing57.com/2017/12/25/how-to-add-shadow-of-images-in-freemind/</id>
    <published>2017-12-25T13:40:37.000Z</published>
    <updated>2017-12-25T07:03:34.076Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;添加图片阴影&quot;&gt;&lt;a href=&quot;#添加图片阴影&quot; class=&quot;headerlink&quot; title=&quot;添加图片阴影&quot;&gt;&lt;/a&gt;添加图片阴影&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/wzpan/hexo-theme-freemind&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-theme-freemind&lt;/a&gt;主题中，默认没有开启图片阴影。当图片的背景和文章的背景是同色的时候，有时会造成混淆，看不清楚哪部分是图片，哪部分是文章。&lt;/p&gt;
&lt;p&gt;打开源码看了一下，发现其实&lt;a href=&quot;https://github.com/wzpan/hexo-theme-freemind&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-theme-freemind&lt;/a&gt;本身就已经支持图片shadow了。只是默认没有开启，而且也没有在README.md中提及。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;hexo-theme-freemind/layout/_partial/article.ejs&lt;/code&gt;文件中有如下代码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;% if (item.shadow ) &amp;#123; %&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           img, video &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                -webkit-box-shadow:0 0 10px rgba(0, 0, 0, .5);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                -moz-box-shadow:0 0 10px rgba(0, 0, 0, .5);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                box-shadow:0 0 10px rgba(0, 0, 0, .5);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/style&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://www.jibing57.com/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="http://www.jibing57.com/tags/Hexo/"/>
    
  </entry>
  
</feed>

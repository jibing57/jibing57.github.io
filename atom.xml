<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Recording</title>
  
  <subtitle>Recording, Sharing, TimeSaving -- 一切成本皆时间</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jibing57.com/"/>
  <updated>2017-12-26T02:56:15.319Z</updated>
  <id>http://www.jibing57.com/</id>
  
  <author>
    <name>jibing57</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>A Simple ELB Access Log Parser By Ruby</title>
    <link href="http://www.jibing57.com/2017/12/26/a-simple-elb-access-log-parser-by-ruby/"/>
    <id>http://www.jibing57.com/2017/12/26/a-simple-elb-access-log-parser-by-ruby/</id>
    <published>2017-12-26T12:35:29.000Z</published>
    <updated>2017-12-26T02:56:15.319Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;工作时候，偶尔会有手动检查ELB Access Log的时候，下载下来的access log是空格隔开的，人眼将数值对应到字段名非常累。&lt;/p&gt;
&lt;p&gt;就顺手写了个Ruby的小程序来解析access log的内容，转换到csv格式。再使用Excel打开csv文件来进行查看。&lt;/p&gt;
&lt;h3 id=&quot;用途&quot;&gt;&lt;a href=&quot;#用途&quot; class=&quot;headerlink&quot; title=&quot;用途&quot;&gt;&lt;/a&gt;用途&lt;/h3&gt;&lt;p&gt;读取access log日志，转换为csv。&lt;/p&gt;
&lt;p&gt;主要用于临时检查小数据量access log来定位问题。如果是基于access log来进行数据分析，还是需要结合RedShift来进行。&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="Ruby" scheme="http://www.jibing57.com/tags/Ruby/"/>
    
      <category term="Elastic Load Balancing" scheme="http://www.jibing57.com/tags/Elastic-Load-Balancing/"/>
    
  </entry>
  
  <entry>
    <title>shell gist to get http 5XX code from ELB access log</title>
    <link href="http://www.jibing57.com/2017/12/25/shell-gist-to-get-http-5XX-code-from-ELB-access-log/"/>
    <id>http://www.jibing57.com/2017/12/25/shell-gist-to-get-http-5XX-code-from-ELB-access-log/</id>
    <published>2017-12-25T14:09:24.000Z</published>
    <updated>2017-12-26T02:56:44.892Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一个简陋的只是够用的shell小脚本，用来从S3中下载前一天的ELB access log，筛选出http code为5XX的日志，然后发送给某个指定的email地址。&lt;/p&gt;
&lt;h3 id=&quot;变量设置&quot;&gt;&lt;a href=&quot;#变量设置&quot; class=&quot;headerlink&quot; title=&quot;变量设置&quot;&gt;&lt;/a&gt;变量设置&lt;/h3&gt;&lt;p&gt;设置下MAIL_TO和S3_BASE_PREFIX这两个变量，然后在有AWS CLI访问环境的机器上执行即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MAIL_TO 如果有多个地址，可用空格隔开&lt;/li&gt;
&lt;li&gt;S3_BASE_PREFIX设置到Access log日志格式之前的prefix就行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如完整的access log地址是: &lt;code&gt;s3://carl-elb-logs/AWSLogs/888888888888/elasticloadbalancing/ap-northeast-2/2017/12/24/704017765382_elasticloadbalancing_ap-northeast-2_ELB-carl_20171224T0120Z_13.125.86.136_5s9i5ef2.log&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;那么S3_BASE_PREFIX设置为&lt;code&gt;s3://carl-elb-logs/AWSLogs/888888888888/elasticloadbalancing/ap-northeast-2&lt;/code&gt;即可&lt;br&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://www.jibing57.com/categories/Shell/"/>
    
    
      <category term="Elastic Load Balancing" scheme="http://www.jibing57.com/tags/Elastic-Load-Balancing/"/>
    
  </entry>
  
  <entry>
    <title>在Freemind主题中开启图片阴影</title>
    <link href="http://www.jibing57.com/2017/12/25/how-to-add-shadow-of-images-in-freemind/"/>
    <id>http://www.jibing57.com/2017/12/25/how-to-add-shadow-of-images-in-freemind/</id>
    <published>2017-12-25T13:40:37.000Z</published>
    <updated>2017-12-25T07:03:34.076Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;添加图片阴影&quot;&gt;&lt;a href=&quot;#添加图片阴影&quot; class=&quot;headerlink&quot; title=&quot;添加图片阴影&quot;&gt;&lt;/a&gt;添加图片阴影&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/wzpan/hexo-theme-freemind&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-theme-freemind&lt;/a&gt;主题中，默认没有开启图片阴影。当图片的背景和文章的背景是同色的时候，有时会造成混淆，看不清楚哪部分是图片，哪部分是文章。&lt;/p&gt;
&lt;p&gt;打开源码看了一下，发现其实&lt;a href=&quot;https://github.com/wzpan/hexo-theme-freemind&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-theme-freemind&lt;/a&gt;本身就已经支持图片shadow了。只是默认没有开启，而且也没有在README.md中提及。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;hexo-theme-freemind/layout/_partial/article.ejs&lt;/code&gt;文件中有如下代码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;% if (item.shadow ) &amp;#123; %&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           img, video &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                -webkit-box-shadow:0 0 10px rgba(0, 0, 0, .5);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                -moz-box-shadow:0 0 10px rgba(0, 0, 0, .5);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                box-shadow:0 0 10px rgba(0, 0, 0, .5);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/style&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://www.jibing57.com/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="http://www.jibing57.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>什么是传统负载均衡器的访问日志</title>
    <link href="http://www.jibing57.com/2017/12/22/what-is-Access-Logs-of-Classic-Load-Balancer/"/>
    <id>http://www.jibing57.com/2017/12/22/what-is-Access-Logs-of-Classic-Load-Balancer/</id>
    <published>2017-12-22T07:26:12.000Z</published>
    <updated>2017-12-26T02:57:19.342Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是传统负载均衡器的Access-Logs&quot;&gt;&lt;a href=&quot;#什么是传统负载均衡器的Access-Logs&quot; class=&quot;headerlink&quot; title=&quot;什么是传统负载均衡器的Access Logs&quot;&gt;&lt;/a&gt;什么是传统负载均衡器的Access Logs&lt;/h3&gt;&lt;p&gt;Elastic Load Balancing 提供了Access Logs(访问日志)，Access Logs可记录下发送到负载均衡器的请求的详细信息。每个日志都包含固定格式的信息 (例如，收到请求的时间、客户端的 IP 地址、延迟、请求路径和服务器响应)。可以使用这些日志分析流量模式和进行Debug。&lt;/p&gt;
&lt;p&gt;Access Logs是ELB的一项可选功能，默认情况下是Disable的。启用后，ELB会将logs存储到指定的某个S3 Bucket中。&lt;/p&gt;
&lt;h3 id=&quot;收费&quot;&gt;&lt;a href=&quot;#收费&quot; class=&quot;headerlink&quot; title=&quot;收费&quot;&gt;&lt;/a&gt;收费&lt;/h3&gt;&lt;p&gt;ELB的Access Logs本身是不需要额外的费用的，从ELB传输到S3的流量是免费的，但是S3的存储费用是需要支付的。&lt;br&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="Elastic Load Balancing" scheme="http://www.jibing57.com/tags/Elastic-Load-Balancing/"/>
    
      <category term="S3" scheme="http://www.jibing57.com/tags/S3/"/>
    
  </entry>
  
  <entry>
    <title>如何在Elastic Beanstalk的Rails环境中配置staging.log为可下载</title>
    <link href="http://www.jibing57.com/2017/12/20/How-to-add-staging-log-to-EB-logs/"/>
    <id>http://www.jibing57.com/2017/12/20/How-to-add-staging-log-to-EB-logs/</id>
    <published>2017-12-20T15:32:43.000Z</published>
    <updated>2017-12-25T07:08:09.553Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;新建了一个EB环境，来跑一个staging模式的rails。EB环境变量设置好后，部署成功。一系列测试都没问题，结果却在一个不起眼的地方出了点幺蛾子。&lt;/p&gt;
&lt;p&gt;Rails代码中，没有特殊配置config.logger,因此staging模式时，默认的输出日志为logs/staging.log, 但是在EB的Web console中尝试获取Full Logs后，在BundleLogs中发现没有staging.log。&lt;/p&gt;
&lt;p&gt;赶紧调查试验了一下，并将调查结果记录如下。&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="Elastic Beanstalk" scheme="http://www.jibing57.com/tags/Elastic-Beanstalk/"/>
    
      <category term="Ruby" scheme="http://www.jibing57.com/tags/Ruby/"/>
    
      <category term="Rails" scheme="http://www.jibing57.com/tags/Rails/"/>
    
  </entry>
  
  <entry>
    <title>S3 RRS价格注意点</title>
    <link href="http://www.jibing57.com/2017/12/20/expired-of-S3-RRS/"/>
    <id>http://www.jibing57.com/2017/12/20/expired-of-S3-RRS/</id>
    <published>2017-12-20T13:33:58.000Z</published>
    <updated>2017-12-25T07:08:09.491Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;S3-存储类型&quot;&gt;&lt;a href=&quot;#S3-存储类型&quot; class=&quot;headerlink&quot; title=&quot;S3 存储类型&quot;&gt;&lt;/a&gt;S3 存储类型&lt;/h3&gt;&lt;p&gt;S3 总共提供三种存储类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标准(Standard)&lt;/li&gt;
&lt;li&gt;标准-低频率访问(Standard - Infrequent Access)&lt;/li&gt;
&lt;li&gt;低冗余存储(Reduced Redundancy Storage)
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="S3" scheme="http://www.jibing57.com/tags/S3/"/>
    
  </entry>
  
  <entry>
    <title>深挖AWS S3的权限管理(实验篇)</title>
    <link href="http://www.jibing57.com/2017/12/19/deep-dig-on-s3-bucket-permission-exam/"/>
    <id>http://www.jibing57.com/2017/12/19/deep-dig-on-s3-bucket-permission-exam/</id>
    <published>2017-12-19T13:54:56.000Z</published>
    <updated>2017-12-25T07:08:09.451Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;a href=&quot;/2017/12/14/deep-dig-on-s3-bucket-permission/&quot; title=&quot;深挖AWS S3的权限管理&quot;&gt;深挖AWS S3的权限管理&lt;/a&gt; 一文中介绍了AWS S3权限管理的三种方法。此处再通过几个实验来看下三种方法的使用方法。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;实验前准备&quot;&gt;&lt;a href=&quot;#实验前准备&quot; class=&quot;headerlink&quot; title=&quot;实验前准备&quot;&gt;&lt;/a&gt;实验前准备&lt;/h3&gt;&lt;h4 id=&quot;实验用相关账号介绍&quot;&gt;&lt;a href=&quot;#实验用相关账号介绍&quot; class=&quot;headerlink&quot; title=&quot;实验用相关账号介绍&quot;&gt;&lt;/a&gt;实验用相关账号介绍&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;IAM User carl.shen - carl.shen有AdministratorAccess权限，用来上传图片到S3&lt;/li&gt;
&lt;li&gt;IAM User carl - 测试IAM User一号，初始没有任何权限&lt;/li&gt;
&lt;li&gt;IAM User shen - 测试IAM User二号，初始没有任何权限&lt;/li&gt;
&lt;li&gt;IAM Group S3Exam - 用来给IAM User carl和shen统一赋权限&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建好三个IAM账号，下载各自的Access key ID和Secret Access Key, 并设置好AWS CLI。AWS CLI多profile的设置方法可以参照 &lt;a href=&quot;/2017/10/24/how-to-use-aws-cli-with-multi-user/&quot; title=&quot;如何在aws cli中使用多个配置文件&quot;&gt;如何在aws cli中使用多个配置文件&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="S3" scheme="http://www.jibing57.com/tags/S3/"/>
    
      <category term="AWS Deep Dive" scheme="http://www.jibing57.com/tags/AWS-Deep-Dive/"/>
    
      <category term="AWS CLI" scheme="http://www.jibing57.com/tags/AWS-CLI/"/>
    
  </entry>
  
  <entry>
    <title>深挖AWS S3的权限管理</title>
    <link href="http://www.jibing57.com/2017/12/14/deep-dig-on-s3-bucket-permission/"/>
    <id>http://www.jibing57.com/2017/12/14/deep-dig-on-s3-bucket-permission/</id>
    <published>2017-12-14T12:48:26.000Z</published>
    <updated>2017-12-25T07:08:09.473Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;AWS共有三种方式用来管理S3的访问权限&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IAM policy&lt;/li&gt;
&lt;li&gt;Bucket Policy&lt;/li&gt;
&lt;li&gt;S3 ACL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此处深挖一下这三种访问控制的用法和区别&lt;/p&gt;
&lt;h3 id=&quot;三种访问控制的介绍&quot;&gt;&lt;a href=&quot;#三种访问控制的介绍&quot; class=&quot;headerlink&quot; title=&quot;三种访问控制的介绍&quot;&gt;&lt;/a&gt;三种访问控制的介绍&lt;/h3&gt;&lt;p&gt;S3的三种访问控制如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IAM Policy, 是基于用户层面的控制，attach to IAM实体(User, Role或Group),规定了谁能对哪些S3做什么操作&lt;/li&gt;
&lt;li&gt;Bucket Policy, 是基于Bucket层面的控制, attach to Bucket, 规定了哪些人能对我这个Bucket中的resource做什么操作。&lt;/li&gt;
&lt;li&gt;S3 ACL, 是基于Bucket或单个对象的，规定了谁能对我这个Bucket或对象做什么操作。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="S3" scheme="http://www.jibing57.com/tags/S3/"/>
    
      <category term="AWS Deep Dive" scheme="http://www.jibing57.com/tags/AWS-Deep-Dive/"/>
    
  </entry>
  
  <entry>
    <title>使用shell添加多行到文件的几个办法</title>
    <link href="http://www.jibing57.com/2017/12/12/how-to-write-multiline-to-file-by-shell/"/>
    <id>http://www.jibing57.com/2017/12/12/how-to-write-multiline-to-file-by-shell/</id>
    <published>2017-12-12T13:51:21.000Z</published>
    <updated>2017-12-25T07:09:02.985Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;使用shell添加多行到某个文件的几个办法, 启动EC2设置User Data时可能会用到。&lt;/p&gt;
&lt;h4 id=&quot;方法一-逐行echo添加&quot;&gt;&lt;a href=&quot;#方法一-逐行echo添加&quot; class=&quot;headerlink&quot; title=&quot;方法一: 逐行echo添加&quot;&gt;&lt;/a&gt;方法一: 逐行echo添加&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;echo &amp;apos;#!/bin/bash&amp;apos; &amp;gt; way1.sh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;echo &amp;apos;export PATH=$PATH:~/bin/&amp;apos; &amp;gt;&amp;gt; way1.sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看文件内容为:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cat way1.sh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#!/bin/bash&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;export PATH=$PATH:~/bin/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://www.jibing57.com/categories/Shell/"/>
    
    
      <category term="EC2 User Data" scheme="http://www.jibing57.com/tags/EC2-User-Data/"/>
    
  </entry>
  
  <entry>
    <title>AWS Certified Sysops Administrator - Associate Road Map</title>
    <link href="http://www.jibing57.com/2017/12/04/AWS-Certified-Sysops-Administrator-Associate/"/>
    <id>http://www.jibing57.com/2017/12/04/AWS-Certified-Sysops-Administrator-Associate/</id>
    <published>2017-12-04T13:27:17.000Z</published>
    <updated>2017-12-25T07:05:45.526Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Official-AWS-Certification-Page&quot;&gt;&lt;a href=&quot;#Official-AWS-Certification-Page&quot; class=&quot;headerlink&quot; title=&quot;Official AWS Certification Page&quot;&gt;&lt;/a&gt;Official AWS Certification Page&lt;/h2&gt;&lt;p&gt;访问官网&lt;a href=&quot;https://amazonaws-china.com/certification/certification-prep/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AWS Certification&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参加 AWS 培训课程&lt;/li&gt;
&lt;li&gt;查看考试指南和样题&lt;ul&gt;
&lt;li&gt;了解考试涉及的概念并整体了解需要学习哪些内容, &lt;a href=&quot;http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_sysops_associate_blueprint.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AWS Certified SysOps Administrator - Associate 考试指南&lt;/a&gt; 相当于考试大纲, 必看,而且需要反复的看。因为学习过一阵后再来看Guide，会有更深的体会。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_sysops_associate_examsample.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;考试样题&lt;/a&gt;用于熟悉题目题型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;完成自主进度动手实验和备考任务&lt;ul&gt;
&lt;li&gt;官方&lt;a href=&quot;https://www.qwiklabs.com/learning_paths/20/lab_catalogue?locale=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;qwikLABS 任务&lt;/a&gt;提供了一系列动手实验, 提供部分免费实验，但大部分实验所需的积分都需要购买。高性价比的做法是， 注册一个AWS全球账号，使用一年的免费额度来对照着实验手册来进行试验。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;学习 AWS 白皮书&lt;ul&gt;
&lt;li&gt;白皮书是纯英文的，而且每个白皮书篇幅都很长，读起来既费时又枯燥。但是有时间还是建议把推荐的几个都看一下。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;查看 AWS 常见问题&lt;/li&gt;
&lt;li&gt;参加模拟考试&lt;ul&gt;
&lt;li&gt;20美刀一次，主要目的是为了让人熟悉考试时上机的流程。是否需要因人而异, 特别想先熟悉下考试流程的可以考虑参加一次。我个人觉得没有必要, 因为真实考试时，操作界面一目了然，没有磕磕绊绊的机关，省下20美刀可以去买一份课程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;报名考试并获得认证&lt;ul&gt;
&lt;li&gt;登陆&lt;a href=&quot;https://www.aws.training/certification&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.aws.training/certification&lt;/a&gt;注册进行考试
    
    </summary>
    
      <category term="AWS Certified" scheme="http://www.jibing57.com/categories/AWS-Certified/"/>
    
    
      <category term="Sysops" scheme="http://www.jibing57.com/tags/Sysops/"/>
    
      <category term="CloudWatch" scheme="http://www.jibing57.com/tags/CloudWatch/"/>
    
  </entry>
  
  <entry>
    <title>在AWS RDS中为Postgresql开启慢查询日志</title>
    <link href="http://www.jibing57.com/2017/11/29/how-to-enable-slow-query-on-aws-rds-postgresql/"/>
    <id>http://www.jibing57.com/2017/11/29/how-to-enable-slow-query-on-aws-rds-postgresql/</id>
    <published>2017-11-29T13:38:12.000Z</published>
    <updated>2017-12-25T07:09:02.871Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;sql遇到性能问题，就需要开启慢查询日志，将执行时间超过某个限定值的sql输出到日志，给后续开发人员分析。下面是AWS RDS中Postgresql开启慢查询日志的方法。包含&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RDS设置&lt;/li&gt;
&lt;li&gt;下载RDS log的方法&lt;/li&gt;
&lt;li&gt;一些注意点&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;RDS设置步骤&quot;&gt;&lt;a href=&quot;#RDS设置步骤&quot; class=&quot;headerlink&quot; title=&quot;RDS设置步骤&quot;&gt;&lt;/a&gt;RDS设置步骤&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;登陆aws console，切换到RDS&lt;br&gt;&lt;img src=&quot;/images/AWS/RDSSlowQuery/switch_to_rds.png&quot; alt=&quot;switch_to_rds.png&quot;&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="AWS SDK" scheme="http://www.jibing57.com/tags/AWS-SDK/"/>
    
      <category term="Ruby" scheme="http://www.jibing57.com/tags/Ruby/"/>
    
      <category term="AWS CLI" scheme="http://www.jibing57.com/tags/AWS-CLI/"/>
    
      <category term="PostgreSQL" scheme="http://www.jibing57.com/tags/PostgreSQL/"/>
    
      <category term="RDS" scheme="http://www.jibing57.com/tags/RDS/"/>
    
  </entry>
  
  <entry>
    <title>创建AWS Account后的基本账号设置</title>
    <link href="http://www.jibing57.com/2017/10/31/account-setting-by-aws/"/>
    <id>http://www.jibing57.com/2017/10/31/account-setting-by-aws/</id>
    <published>2017-10-31T15:10:46.000Z</published>
    <updated>2017-12-25T07:08:09.329Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;记录创建好AWS账号后的几个基本设置, 大概介绍如下几点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看是否满足Free Tier Usage&lt;/li&gt;
&lt;li&gt;创建IAM账号&lt;/li&gt;
&lt;li&gt;为IAM账号启用Billing&lt;/li&gt;
&lt;li&gt;如何提交Case&lt;/li&gt;
&lt;li&gt;切换Console语言&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="IAM" scheme="http://www.jibing57.com/tags/IAM/"/>
    
      <category term="AWS Free Tier" scheme="http://www.jibing57.com/tags/AWS-Free-Tier/"/>
    
  </entry>
  
  <entry>
    <title>绑定万网域名到github pages</title>
    <link href="http://www.jibing57.com/2017/10/31/hexo-bind-domain-to-github-pages/"/>
    <id>http://www.jibing57.com/2017/10/31/hexo-bind-domain-to-github-pages/</id>
    <published>2017-10-31T13:17:50.000Z</published>
    <updated>2017-12-25T07:08:09.505Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;此处介绍如何将万网的域名绑定到github pages&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;万网设置&quot;&gt;&lt;a href=&quot;#万网设置&quot; class=&quot;headerlink&quot; title=&quot;万网设置&quot;&gt;&lt;/a&gt;万网设置&lt;/h3&gt;&lt;p&gt;进入aliyun控制的云解析DNS控制台，选中所要解析的域名，此处是jibing57.com, 点击右侧解析按钮。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;记录类型选择 CNAME&lt;/li&gt;
&lt;li&gt;主机记录填写 www&lt;/li&gt;
&lt;li&gt;记录值填入github pages的域名，此处是jibing57.github.io
    
    </summary>
    
      <category term="Blog" scheme="http://www.jibing57.com/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="http://www.jibing57.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://www.jibing57.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Hexo引用站内文章</title>
    <link href="http://www.jibing57.com/2017/10/30/how-to-use-post-link-on-hexo/"/>
    <id>http://www.jibing57.com/2017/10/30/how-to-use-post-link-on-hexo/</id>
    <published>2017-10-30T11:32:52.000Z</published>
    <updated>2017-12-25T07:09:02.968Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;写文章的时候，经常需要引用站内的其他文章，此时可以使用Hexo内置的&lt;a href=&quot;https://hexo.io/zh-cn/docs/tag-plugins.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;标签插件&lt;/a&gt;（Tag Plugins）中的&lt;code&gt;post_link&lt;/code&gt;来实现。&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://www.jibing57.com/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="http://www.jibing57.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Paperclip destroy的callback中attachment的各个attribute为nil的问题调查</title>
    <link href="http://www.jibing57.com/2017/10/29/ruby-paperclip-destroy-callback-nil/"/>
    <id>http://www.jibing57.com/2017/10/29/ruby-paperclip-destroy-callback-nil/</id>
    <published>2017-10-29T12:36:00.000Z</published>
    <updated>2017-12-25T07:09:03.008Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题点&quot;&gt;&lt;a href=&quot;#问题点&quot; class=&quot;headerlink&quot; title=&quot;问题点&quot;&gt;&lt;/a&gt;问题点&lt;/h3&gt;&lt;p&gt;Rails的Image的models中，使用了paperclip这个Gem来处理图片。近期需要添加一个功能，删除image后，需要向某个email地址发送一封邮件，告之某个图片已经被删除了。&lt;/p&gt;
&lt;p&gt;实际操作中，发现在无论函数是定义在before_destroy或after_destroy的callback中，attachment_file_name,attachment_file_size, attachment_content_type, attachment_updated_at的属性，取出来都是nil。&lt;/p&gt;
&lt;p&gt;调查了一下，现将结果汇总如下:&lt;br&gt;
    
    </summary>
    
      <category term="Code" scheme="http://www.jibing57.com/categories/Code/"/>
    
    
      <category term="Ruby" scheme="http://www.jibing57.com/tags/Ruby/"/>
    
  </entry>
  
  <entry>
    <title>如何在aws cli中使用多个配置文件</title>
    <link href="http://www.jibing57.com/2017/10/24/how-to-use-aws-cli-with-multi-user/"/>
    <id>http://www.jibing57.com/2017/10/24/how-to-use-aws-cli-with-multi-user/</id>
    <published>2017-10-24T13:50:10.000Z</published>
    <updated>2017-12-25T07:09:02.930Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;aws cli&lt;/code&gt;使用中，可能会有在多个IAM账户中进行切换的需求，手动切换&lt;code&gt;~/.aws/&lt;/code&gt;目录下的&lt;code&gt;config&lt;/code&gt;和&lt;code&gt;credentials&lt;/code&gt;是十分费力的事情。还好&lt;code&gt;aws cli&lt;/code&gt;本身就可以支持多个aws credentials&lt;/p&gt;
&lt;h3 id=&quot;配置多个profile&quot;&gt;&lt;a href=&quot;#配置多个profile&quot; class=&quot;headerlink&quot; title=&quot;配置多个profile&quot;&gt;&lt;/a&gt;配置多个profile&lt;/h3&gt;&lt;p&gt;&lt;code&gt;aws configure&lt;/code&gt;时，加上&lt;code&gt;--profile&lt;/code&gt;参数来命名不同的账户, 依次输入access id, access key, region和output format。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ aws configure --profile user1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ aws configure --profile user2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此时生成的&lt;code&gt;config&lt;/code&gt;和&lt;code&gt;credentials&lt;/code&gt;文件中，会使用账户名来分割不同的配置&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[carlshen@carl-macpro-lan ~]$ cat ~/.aws/config&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[profile user1]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;output = json&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;region = us-west-2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[profile user2]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;output = json&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;region = ap-northeast-2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[carlshen@carl-macpro-lan ~]$&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[carlshen@carl-macpro-lan ~]$ cat ~/.aws/credentials&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[user1]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;aws_access_key_id = AKIAXXXXXXXXXXXXXXXX&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;aws_secret_access_key = XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[user2]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;aws_access_key_id = AKIAXXXXXXXXXXXXXXXX&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;aws_secret_access_key = XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[carlshen@carl-macpro-lan ~]$&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="AWS CLI" scheme="http://www.jibing57.com/tags/AWS-CLI/"/>
    
  </entry>
  
  <entry>
    <title>使用aws codecommit作为私有的git远程服务器</title>
    <link href="http://www.jibing57.com/2017/10/24/how-to-use-aws-codecommit/"/>
    <id>http://www.jibing57.com/2017/10/24/how-to-use-aws-codecommit/</id>
    <published>2017-10-24T12:10:54.000Z</published>
    <updated>2017-12-25T07:09:02.951Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;博客的hexo的代码，一直是保存在本地的。上次电脑花了一次屏后，感觉到保存在本地实在是不够安全。因此考虑寻觅一个远端的私密git库，存起来。&lt;/p&gt;
&lt;p&gt;开始寻寻觅觅合适的仓库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Github?,私有库是收费的。但为了这些哪条就不更新的markdown，每月7刀开个Developer的Plan，感觉不划算。&lt;/li&gt;
&lt;li&gt;自建Gitlab？嫌麻烦麻烦。&lt;/li&gt;
&lt;li&gt;oschina的私有库？不想用。&lt;/li&gt;
&lt;li&gt;。。。。。。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;好吧，我承认我就是想尝试用一下aws的codecommit。&lt;/p&gt;
&lt;p&gt;关于CodeCommit的免费额度，&lt;a href=&quot;https://aws.amazon.com/cn/codecommit/pricing/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;介绍:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最初5位活动用户&lt;ul&gt;
&lt;li&gt;无限存储库&lt;/li&gt;
&lt;li&gt;50GB的月存储量&lt;/li&gt;
&lt;li&gt;每月10000个git请求&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;托管我一个小博客，妥妥的够了。毕竟除了我，没人还会来关心这点markdown文件, 5位用户免费足够了。至于50GB的月存储量么，除非把看过的电影都commit进git来，要不然应该是足够了。&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="Git" scheme="http://www.jibing57.com/tags/Git/"/>
    
      <category term="CodeCommit" scheme="http://www.jibing57.com/tags/CodeCommit/"/>
    
  </entry>
  
  <entry>
    <title>Linux 和 Mac下date命令的基本用法</title>
    <link href="http://www.jibing57.com/2017/08/03/date-command-on-Linux-and-Mac/"/>
    <id>http://www.jibing57.com/2017/08/03/date-command-on-Linux-and-Mac/</id>
    <published>2017-08-03T13:54:02.000Z</published>
    <updated>2017-12-25T07:08:09.429Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Mac下的date命令是BDS系的, Linux下date命令是GNU系的，两者的用法有一些区别，罗列如下:&lt;/p&gt;
&lt;h3 id=&quot;共同点&quot;&gt;&lt;a href=&quot;#共同点&quot; class=&quot;headerlink&quot; title=&quot;共同点&quot;&gt;&lt;/a&gt;共同点&lt;/h3&gt;&lt;p&gt;基本的时间格式的缩写是相同的，规则如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;%Y 表示四位数形式的年份, 比如2017&lt;/li&gt;
&lt;li&gt;%m 表示带前导0的月份，比如02,12&lt;/li&gt;
&lt;li&gt;%d 表示带前导0的日子， 比如 02，28&lt;/li&gt;
&lt;li&gt;%H 表示带前导0的24小时， 比如 01, 23&lt;/li&gt;
&lt;li&gt;%M 表示带前导0的分钟数， 比如 05, 22&lt;/li&gt;
&lt;li&gt;%S 表示带前导0的秒数， 比如 06，45&lt;/li&gt;
&lt;li&gt;%s 表示距离格林威治时间(1970年1月1日0点)的秒数&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://www.jibing57.com/categories/Shell/"/>
    
    
      <category term="Linux" scheme="http://www.jibing57.com/tags/Linux/"/>
    
      <category term="MacOS" scheme="http://www.jibing57.com/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>Macos中如何语音朗读文字</title>
    <link href="http://www.jibing57.com/2017/07/25/how-to-read-text-on-macos/"/>
    <id>http://www.jibing57.com/2017/07/25/how-to-read-text-on-macos/</id>
    <published>2017-07-25T07:21:28.000Z</published>
    <updated>2017-12-25T07:09:02.911Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;场景&quot;&gt;&lt;a href=&quot;#场景&quot; class=&quot;headerlink&quot; title=&quot;场景&quot;&gt;&lt;/a&gt;场景&lt;/h2&gt;&lt;p&gt;Macos上看到大段大段的英文，有时候除了看以外，还想边听边看&lt;/p&gt;
&lt;h2 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; clas
      
    
    </summary>
    
      <category term="Tools" scheme="http://www.jibing57.com/categories/Tools/"/>
    
    
      <category term="MacOS" scheme="http://www.jibing57.com/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>AWS相关的一些有用的网址</title>
    <link href="http://www.jibing57.com/2017/07/25/useful-website-of-aws/"/>
    <id>http://www.jibing57.com/2017/07/25/useful-website-of-aws/</id>
    <published>2017-07-25T02:49:10.000Z</published>
    <updated>2017-12-25T07:09:03.025Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;cloudping-info&quot;&gt;&lt;a href=&quot;#cloudping-info&quot; class=&quot;headerlink&quot; title=&quot;cloudping.info&quot;&gt;&lt;/a&gt;cloudping.info&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.cloudping.info/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;clougping.info&lt;/a&gt;是一个可以检测当前浏览器到AWS各个Region的延迟的网站, 可以用来评估访问哪个Region更快一点。在建立测试服务的时候十分有用。&lt;/p&gt;
&lt;p&gt;单次的测试结果不一定准确，建议多试几次后再选取平均延迟低的结果。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;国内测试的结果:&lt;br&gt;&lt;img src=&quot;/images/AWS/Tools/cloudping_on_cn.jpg&quot; alt=&quot;cloudping_on_cn&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在国内使用AWS全球账号时，在韩国首尔Region建测试服务延迟会小一点。&lt;/p&gt;
    
    </summary>
    
      <category term="AWS" scheme="http://www.jibing57.com/categories/AWS/"/>
    
    
      <category term="AWS Tools" scheme="http://www.jibing57.com/tags/AWS-Tools/"/>
    
  </entry>
  
</feed>

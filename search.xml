<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[日上清单]]></title>
      <url>/2017/08/01/rishang/</url>
      <content type="html"><![CDATA[<h2 id="精华乳液"><a href="#精华乳液" class="headerlink" title="精华乳液"></a>精华乳液</h2><p><strong>1 MOISTURIZING SOFT LOTION 海蓝之谜精华乳液 50ml * 1</strong><br><img src="/images/RiShang/1.pic_hd.jpg" alt="MOISTURIZING SOFT LOTION"></p>
<hr>
<hr>
<hr>
<h2 id="海蓝之谜修复露"><a href="#海蓝之谜修复露" class="headerlink" title="海蓝之谜修复露"></a>海蓝之谜修复露</h2><p><strong>2 BRILLIANCE WHITE INFUSION 海蓝之谜焕白璀璨修护露 125ml * 1</strong><br><img src="/images/RiShang/3.pic_hd.jpg" alt="BRILLIANCE WHITE INFUSION"></p>
<p>如果<strong>2 BRILLIANCE WHITE INFUSION 海蓝之谜焕白璀璨修护露 125ml * 1</strong> 没有的话，就买这个</p>
<p><strong>3 THE TREATMENT LOTION 海蓝之谜修护精萃液 150ml * 1</strong><br><img src="/images/RiShang/2.pic_hd.jpg" alt="BRILLIANCE WHITE INFUSION"></p>
<hr>
<hr>
<hr>
<h2 id="面霜"><a href="#面霜" class="headerlink" title="面霜"></a>面霜</h2><p><strong>4 LIFTING AND FIRMING MASK 海蓝之谜提升紧致精华面膜 50ml *1</strong><br><img src="/images/RiShang/5.pic_hd.jpg" alt="LIFTING AND FIRMING MASK"></p>
<p>如果 <strong>4 LIFTING AND FIRMING MASK 海蓝之谜提升紧致精华面膜 50ml *1</strong>没有的话，买如下的5</p>
<p><strong>5 Absolue Precious Cells Revitaliz 兰蔻玫瑰修护面膜 75ml  * 1</strong><br><img src="/images/RiShang/6.pic_hd.jpg" alt="Absolue Precious Cells Revitaliz"></p>
<p>如果 <strong>5 Absolue Precious Cells Revitaliz 兰蔻玫瑰修护面膜 75ml  * 1</strong> 没有的话，买如下的6<br><strong>6 Energie De Vie Nuit Overnight Recovery Sleeping Mask 兰蔻「水光膜」水光润养睡眠面膜  75ml * 1</strong><br><img src="/images/RiShang/7.pic_hd.jpg" alt="Energie De Vie Nuit Overnight Recovery Sleeping"></p>
<hr>
<hr>
<hr>
<h2 id="洗面奶"><a href="#洗面奶" class="headerlink" title="洗面奶"></a>洗面奶</h2><p><strong>7 Blanc Expert Purifying Foam 兰蔻净透洁面泡沫 *2支</strong><br><img src="/images/RiShang/4.pic_hd.jpg" alt="Blanc Expert Purifying Foam"></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Macos中如何语音朗读文字]]></title>
      <url>/2017/07/25/how-to-read-text-on-macos/</url>
      <content type="html"><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>Macos上看到大段大段的英文，有时候除了看以外，还想边听边看</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="Macos-自带speech"><a href="#Macos-自带speech" class="headerlink" title="Macos 自带speech"></a>Macos 自带speech</h3><p>Macos 自带了文本至语音的功能, 开启方法如下:</p>
<ol>
<li>打开[系统偏好设置] -&gt; [听写与语音] -&gt; 切换至[文本至语音]</li>
<li>可以选择系统嗓音和朗读速率</li>
<li>可以设置快捷键，默认为Option + Esc, 选择文字后按快捷键开启，再次按快捷键关闭</li>
</ol>
<p>或选中文字，右键菜单选择[语音]-&gt;[开始讲话]</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://support.apple.com/kb/PH14230?locale=en_US" target="_blank" rel="external">OS X Mavericks: Hear your Mac speak text</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Tools </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Macos </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Hexo搭建Blog]]></title>
      <url>/2017/07/17/hexo-github-blog/</url>
      <content type="html"><![CDATA[<h2 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><p>安装Hexo需要依赖如下两个程序, 需要提前安装</p>
<ul>
<li>Node.js</li>
<li>git</li>
</ul>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>Node.js和git都安装完毕后，执行如下命令安装Hexo</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure>
<h3 id="初始化Blog"><a href="#初始化Blog" class="headerlink" title="初始化Blog"></a>初始化Blog</h3><p>cd到存放博客的目标目录，执行<code>hexo init</code>命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init my_blog</div></pre></td></tr></table></figure>
<p>其中<code>my_blog</code>就是博客所在的文件夹名字。</p>
<p>注意: 最新版的<code>hexo</code>不需要切换到文件夹下敲击<code>npm install</code>了，<code>init</code>的时候会一并安装所需的npm packet。</p>
<p>进入目录，目录结构类似如下.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ cd my_blog/</div><div class="line">$ tree -I &quot;node_modules&quot; ./</div><div class="line">./</div><div class="line">├── _config.yml</div><div class="line">├── db.json</div><div class="line">├── package.json</div><div class="line">├── scaffolds</div><div class="line">│   ├── draft.md</div><div class="line">│   ├── page.md</div><div class="line">│   └── post.md</div><div class="line">├── source</div><div class="line">│   └── _posts</div><div class="line">│       └── hello-world.md</div><div class="line">└── themes</div></pre></td></tr></table></figure>
<p>执行下面的命令开启<code>hexo</code>服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo -s --debug</div></pre></td></tr></table></figure>
<p>访问 <code>http://0.0.0.0:4000</code>应该就能看到默认的页面了。</p>
<a id="more"></a>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="基本信息配置"><a href="#基本信息配置" class="headerlink" title="基本信息配置"></a>基本信息配置</h3><p>打开博客根目录下的<code>_config.yml</code>文件，修改<code>title</code>, <code>subtitle</code>, <code>description</code>, <code>author</code>, <code>url</code>等个人信息</p>
<p>将<code>language</code>设置为<code>default</code>.</p>
<p>配置文件中默认参数的描述可以参见官网说明 <a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external">https://hexo.io/zh-cn/docs/configuration.html</a></p>
<h2 id="更换Theme"><a href="#更换Theme" class="headerlink" title="更换Theme"></a>更换Theme</h2><p>以下以更换<a href="(https://github.com/wzpan/hexo-theme-freemind/)">hexo-theme-freemind</a>主题为例:</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>使用如下命令安装<a href="(https://github.com/wzpan/hexo-theme-freemind/)">hexo-theme-freemind</a>主题</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone https://github.com/wzpan/hexo-theme-freemind.git themes/freemind</div></pre></td></tr></table></figure>
<p>安装可选插件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-tag-bootstrap --save</div><div class="line">$ npm install hexo-tag-bootstrap --save</div></pre></td></tr></table></figure>
<h3 id="启用freemind预定义的几个pages"><a href="#启用freemind预定义的几个pages" class="headerlink" title="启用freemind预定义的几个pages"></a>启用freemind预定义的几个pages</h3><p>Freemind 预先定义了 Categories（分类）、Tags（标签） 和 About（关于）页面，要使用它们，你需要先在博客的<code>source</code>目录中添加相应页面。</p>
<p>使用如下命令来生成几个Pages页面</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo new page &quot;tags&quot;</div><div class="line">$ hexo new page &quot;categories&quot;</div><div class="line">$ hexo new page &quot;about&quot;</div></pre></td></tr></table></figure>
<p>修改生成的目录下的<code>index.md</code>文件为如下内容:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ cat about/index.md</div><div class="line">---</div><div class="line">title: About</div><div class="line">layout: about</div><div class="line">---</div><div class="line">$ cat categories/index.md</div><div class="line">---</div><div class="line">title: Categories</div><div class="line">layout: categories</div><div class="line">---</div><div class="line">$ cat tags/index.md</div><div class="line">---</div><div class="line">title: Tags</div><div class="line">layout: tags</div><div class="line">---</div><div class="line">$</div></pre></td></tr></table></figure>
<h3 id="启用-freemind"><a href="#启用-freemind" class="headerlink" title="启用 freemind"></a>启用 freemind</h3><p>在根目录_config.yml中，替换<code>theme</code>选项为<code>freemind</code>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># Extensions</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line"># theme: landscape</div><div class="line">theme: freemind</div></pre></td></tr></table></figure>
<h3 id="修改freemind的配置文件"><a href="#修改freemind的配置文件" class="headerlink" title="修改freemind的配置文件"></a>修改freemind的配置文件</h3><ul>
<li>修改<code>slogan</code></li>
<li>修改<code>links</code>为自己想要链接的网址</li>
<li>暂时不想开启评论，因此注释掉了<code>comment_js</code></li>
<li>修改<code>theme</code>来调整color theme, <code>freemind</code>所支持的<a href="http://www.hahack.com/hexo-theme-freemind/2016/01/30/color-themes/" target="_blank" rel="external">color theme</a></li>
</ul>
<p>freemind配置文件的详细解释参见<a href="(https://github.com/wzpan/hexo-theme-freemind/)">freemind github</a>中的Configuration章节。</p>
<h3 id="freemind-front-matter-选项"><a href="#freemind-front-matter-选项" class="headerlink" title="freemind front-matter 选项"></a>freemind front-matter 选项</h3><p>根据<a href="(https://github.com/wzpan/hexo-theme-freemind/)">Github</a>中的描述，<code>freemind</code>共提供了如下5个设置:</p>
<ul>
<li>description - a short description about the articles that will be display at the top of the post</li>
<li>feature - sets a feature image that will be show at the index page</li>
<li>toc - renders a table of contents</li>
<li>top - pin the article to top if it is set to true</li>
<li>issue_id - comment.js issue_id for explicitly point out which Github issue should be connect to your post. For most situations you don’t need it unless the post doesn’t link to the issue you want.</li>
</ul>
<p>以Hexo默认生成的<code>_posts/hello-world.md</code>的为例来展示<code>description</code>,<code>feature</code>,<code>toc</code>,<code>top</code>四个设置的显示效果。</p>
<p>首先修改后的<code>hello-world.md</code>文件头部如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">title: Hello World</div><div class="line">description: Add description of freemind to title &quot;Hello World&quot;</div><div class="line">feature: images/7217667e206c9bec45dbddb7b608bcb4.jpg</div><div class="line">toc: true</div><div class="line">top: true</div></pre></td></tr></table></figure>
<p>设置<code>description</code>和<code>toc</code>后的效果如下:</p>
<p><img src="/images//Hexo/Starting/freemind_description_toc.jpg" alt="info"></p>
<p>设置<code>feature</code>和<code>top</code>后的显示效果如下:</p>
<p><img src="/images//Hexo/Starting/freemind_top_feature.jpg" alt="info"></p>
<h3 id="添加统计"><a href="#添加统计" class="headerlink" title="添加统计"></a>添加统计</h3><p>开启<a href="https://tongji.baidu.com" target="_blank" rel="external">百度统计</a></p>
<p>freemind自带百度统计功能，在主题的_config.yml中找到Analytics, 设置baidu_tongji一栏下面的enable为true，再添加上siteid即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Analytics</div><div class="line">google_analytics:</div><div class="line">  enable: false</div><div class="line">  siteid:</div><div class="line">baidu_tongji:</div><div class="line">  enable: true</div><div class="line">  siteid: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</div></pre></td></tr></table></figure>
<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><h3 id="安装豆瓣插件"><a href="#安装豆瓣插件" class="headerlink" title="安装豆瓣插件"></a>安装豆瓣插件</h3><p>安装豆瓣插件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-douban --save</div></pre></td></tr></table></figure>
<p>在hexo的<code>_config.yml</code>的<code>Extensions</code>设置下添加如下配置:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">douban:</div><div class="line">    user: douban_id</div></pre></td></tr></table></figure>
<p>在<code>freemind</code>的<code>_config.yml</code>的<code>menu</code>项下添加豆瓣的page页面</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">- title: Douban</div><div class="line">  url: douban</div><div class="line">  intro: &quot;Douban&quot;</div><div class="line">  icon: &quot;fa fa-book&quot;</div></pre></td></tr></table></figure>
<p>重启一下就能看到主页中Douban的page了。</p>
<h3 id="安装rss插件"><a href="#安装rss插件" class="headerlink" title="安装rss插件"></a>安装rss插件</h3><p>添加<code>hexo-generator-feed</code>插件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-generator-feed</div></pre></td></tr></table></figure>
<p>修改_config.yml，添加Extensions</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Feed Atom</div><div class="line">feed:</div><div class="line">  type: atom</div><div class="line">  path: atom.xml</div><div class="line">  limit: 20</div><div class="line">  hub:</div><div class="line">  content:</div></pre></td></tr></table></figure>
<p>设置完成后，可以访问<code>http://jibing57.github.io/atom.xml</code>来检验是否成功生成。</p>
<h3 id="安装sitemap"><a href="#安装sitemap" class="headerlink" title="安装sitemap"></a>安装sitemap</h3><p>添加<code>hexo-generator-sitemap</code>插件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-generator-sitemap --save</div></pre></td></tr></table></figure>
<p>修改_config.yml, 添加Extensions</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sitemap:</div><div class="line">  path: sitemap.xml</div></pre></td></tr></table></figure>
<p>设置完成后，访问<code>http://jibing57.github.io/sitemap.xml</code>来检验是否成功生成了sitemap</p>
<h3 id="安装搜索插件"><a href="#安装搜索插件" class="headerlink" title="安装搜索插件"></a>安装搜索插件</h3><p>添加<code>hexo-generator-search</code>插件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-generator-search --save</div></pre></td></tr></table></figure>
<h2 id="post相关"><a href="#post相关" class="headerlink" title="post相关"></a>post相关</h2><h3 id="修改默认的post脚手架"><a href="#修改默认的post脚手架" class="headerlink" title="修改默认的post脚手架"></a>修改默认的post脚手架</h3><p>修改<code>scaffolds/post.md</code>，添加如下freemind支持的<code>Front-matter</code>, 每次<code>hexo new post xx</code>的时候，就自动会生成到新的post文件中，不用每次手动生成了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: &#123;&#123; title &#125;&#125;</div><div class="line">date: &#123;&#123; date &#125;&#125;</div><div class="line">categories:</div><div class="line">tags:</div><div class="line">description:</div><div class="line">feature:</div><div class="line">toc: true</div><div class="line">---</div></pre></td></tr></table></figure>
<h3 id="调整post的侧边栏"><a href="#调整post的侧边栏" class="headerlink" title="调整post的侧边栏"></a>调整post的侧边栏</h3><p>将Toc调整为显示时间之下，categories和tags之上，并且调整显示时间为精确到秒</p>
<p>修改调整 <code>themes/freemind/layout/_partial/post/meta.ejs</code>的内容如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;!-- date --&gt;</div><div class="line">&lt;% if (item.date) &#123; %&gt;</div><div class="line">&lt;div class=&quot;meta-widget&quot;&gt;</div><div class="line">&lt;i class=&quot;fa fa-clock-o&quot;&gt;&lt;/i&gt;</div><div class="line">&lt;%= item.date.format(config.date_format)+&apos; &apos;+item.date.format(config.time_format) %&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;% &#125; %&gt;</div><div class="line"></div><div class="line">&lt;!-- toc --&gt;</div><div class="line">&lt;div class=&quot;meta-widget&quot;&gt;</div><div class="line">&lt;% if(item.toc)&#123; %&gt;</div><div class="line">   &lt;a data-toggle=&quot;collapse&quot; data-target=&quot;#toc&quot;&gt;&lt;i class=&quot;fa fa-bars&quot;&gt;&lt;/i&gt;&lt;/a&gt;</div><div class="line">   &lt;div id=&quot;toc&quot; class=&quot;toc collapse in&quot;&gt;</div><div class="line">		&lt;%- toc(item.content, &#123;class: &quot;toc-article&quot;, list_number:false&#125;) %&gt;</div><div class="line">	&lt;/div&gt;</div><div class="line">&lt;% &#125; %&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<h3 id="Post文章在列表中的预览"><a href="#Post文章在列表中的预览" class="headerlink" title="Post文章在列表中的预览"></a>Post文章在列表中的预览</h3><p>默认情况下，在列表预览中会将所有的文章内容都显示出来，会显得比较冗余，可以在Post文章中，添加<code>&lt;!-- more --&gt;</code>预览标签，这样列表预览中只会显示文章开头到<code>&lt;!-- more --&gt;</code>预览标签之间的文字。</p>
<h3 id="多tag"><a href="#多tag" class="headerlink" title="多tag"></a>多tag</h3><p>给文章设置多个tags的方法:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># 方法1</div><div class="line">tags: [tag1,tag2,tag3]</div><div class="line"></div><div class="line">#方法2</div><div class="line">tags:</div><div class="line">  - tag1</div><div class="line">  - tag2</div><div class="line">  - tag3</div></pre></td></tr></table></figure>
<h2 id="deploy部署至Github-Pages"><a href="#deploy部署至Github-Pages" class="headerlink" title="deploy部署至Github Pages"></a>deploy部署至Github Pages</h2><h3 id="deploy至Github-Pages"><a href="#deploy至Github-Pages" class="headerlink" title="deploy至Github Pages"></a>deploy至Github Pages</h3><p>首先需要在<code>github</code>上创建<code>jibing57.github.io</code>的repository, 其中<code>jibing57</code>需要替换为自己的<code>github</code>的用户名, 还需要在<code>~/.ssh/config</code>中设置好访问<code>github</code>的私钥。</p>
<p>安装Hexo的扩展</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<p>修改<code>_config.yml</code>中<code>deploy</code>一栏的设置:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: https://github.com/jibing57/jibing57.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>使用以下命令发布到Github Pages</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo d</div></pre></td></tr></table></figure>
<h3 id="绑定个人域名"><a href="#绑定个人域名" class="headerlink" title="绑定个人域名"></a>绑定个人域名</h3><h2 id="未定的小特性"><a href="#未定的小特性" class="headerlink" title="未定的小特性"></a>未定的小特性</h2><ol>
<li>Categories和Tags中，需要支持日期排列<ul>
<li>tags 类似 <a href="https://rickhw.github.io/tags/JSON/" target="_blank" rel="external">https://rickhw.github.io/tags/JSON/</a></li>
<li>category 类似 <a href="https://rickhw.github.io/categories/Blog/" target="_blank" rel="external">https://rickhw.github.io/categories/Blog/</a></li>
</ul>
</li>
<li>支持https</li>
<li>404公益页面</li>
<li>自定义github域名</li>
<li>支持评论</li>
<li>支持google，baidu统计</li>
</ol>
<h2 id="待定"><a href="#待定" class="headerlink" title="待定"></a>待定</h2><ul>
<li>还有一个豆瓣的插件 <a href="https://github.com/mythsman/hexo-douban" target="_blank" rel="external">https://github.com/mythsman/hexo-douban</a> 可以分享读书和电影，后续可以尝试下<ul>
<li>读书页面 <a href="https://blog.mythsman.com/books/" target="_blank" rel="external">https://blog.mythsman.com/books/</a></li>
<li>电影页面 <a href="https://blog.mythsman.com/movies/" target="_blank" rel="external">https://blog.mythsman.com/movies/</a><br>-</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Blog </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何给本地视频生成字幕]]></title>
      <url>/2017/07/17/How-to-get-subtitle-of-local-video/</url>
      <content type="html"><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>适合如下场景:</p>
<ul>
<li>视频本身不带字幕</li>
<li>直接看英文视频比较吃力</li>
</ul>
<p>此时可以使用<code>autosub</code>这个工具来根据视频中的声音来生成对应的字幕，虽然生成的字幕并不总是那么正确，但当做参考还是不错的。</p>
<h2 id="autosub简介"><a href="#autosub简介" class="headerlink" title="autosub简介"></a>autosub简介</h2><p><a href="https://github.com/agermanidis/autosub" target="_blank" rel="external">autosub</a>是一款由python 2编写的通过Google Web Speech API和FFmpeg来获取视频subtitle的软件</p>
<p>Github地址: <a href="https://github.com/agermanidis/autosub" target="_blank" rel="external">https://github.com/agermanidis/autosub</a></p>
<p>Github上的Usage:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">$ autosub -h</div><div class="line">usage: autosub [-h] [-C CONCURRENCY] [-o OUTPUT] [-F FORMAT] [-S SRC_LANGUAGE]</div><div class="line">               [-D DST_LANGUAGE] [-K API_KEY] [--list-formats]</div><div class="line">               [--list-languages]</div><div class="line">               [source_path]</div><div class="line"></div><div class="line">positional arguments:</div><div class="line">  source_path           Path to the video or audio file to subtitle</div><div class="line"></div><div class="line">optional arguments:</div><div class="line">  -h, --help            show this help message and exit</div><div class="line">  -C CONCURRENCY, --concurrency CONCURRENCY</div><div class="line">                        Number of concurrent API requests to make</div><div class="line">  -o OUTPUT, --output OUTPUT</div><div class="line">                        Output path for subtitles (by default, subtitles are</div><div class="line">                        saved in the same directory and name as the source</div><div class="line">                        path)</div><div class="line">  -F FORMAT, --format FORMAT</div><div class="line">                        Destination subtitle format</div><div class="line">  -S SRC_LANGUAGE, --src-language SRC_LANGUAGE</div><div class="line">                        Language spoken in source file</div><div class="line">  -D DST_LANGUAGE, --dst-language DST_LANGUAGE</div><div class="line">                        Desired language for the subtitles</div><div class="line">  -K API_KEY, --api-key API_KEY</div><div class="line">                        The Google Translate API key to be used. (Required for</div><div class="line">                        subtitle translation)</div><div class="line">  --list-formats        List all available subtitle formats</div><div class="line">  --list-languages      List all available source/destination languages</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="Macos-下安装方法"><a href="#Macos-下安装方法" class="headerlink" title="Macos 下安装方法"></a>Macos 下安装方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">brew install ffmpeg</div><div class="line">pip install autosub</div></pre></td></tr></table></figure>
<h2 id="批量生成"><a href="#批量生成" class="headerlink" title="批量生成"></a>批量生成</h2><p>原程序参数貌似不支持多文件，基于自身需要，写了个粗糙的小脚本来批量转换整个目录下的视频文件。目前够用，后续如果有子目录以及除mp4的其他格式的需求，再改进</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">USAGE=&quot;USAGE: $0 dir|file&quot;</div><div class="line"></div><div class="line">if [ &quot;$1&quot; == &quot;&quot; ]; then</div><div class="line">    echo $USAGE</div><div class="line">    exit 1</div><div class="line">fi</div><div class="line"></div><div class="line">if [ -f $1 ]; then</div><div class="line">    autosub $1</div><div class="line">    exit 1</div><div class="line">fi</div><div class="line"></div><div class="line">if [ ! -d $1 ]; then</div><div class="line">    echo $USAGE</div><div class="line">    exit 1</div><div class="line">fi</div><div class="line"></div><div class="line">base_dir=$1</div><div class="line">echo &quot;Start to use autosub to generate subtitle for video in $base_dir&quot;</div><div class="line">echo &quot;cd to $base_dir&quot;</div><div class="line">echo &quot;**************************************************&quot;</div><div class="line">echo &quot;&quot;</div><div class="line">cd $base_dir</div><div class="line">file_list=`ls *.mp4`</div><div class="line">for file in $file_list</div><div class="line">do</div><div class="line">    echo &quot;oooooooooooooooooooooooooo&quot;</div><div class="line">    echo &quot; ==== Start to process file - $&#123;file&#125;&quot;</div><div class="line">    file_basename=`basename $file`</div><div class="line">    subtitle_file_name=&quot;$&#123;file_basename%.*&#125;.srt&quot;</div><div class="line">    if [ -e $subtitle_file_name ]; then</div><div class="line">        echo &quot;Subtitle of $file has already existed. don&apos;t need to process again&quot;</div><div class="line">    else</div><div class="line">        autosub $file</div><div class="line">    fi</div><div class="line">    echo &quot; ==== Finish to process file - $&#123;file&#125;&quot;</div><div class="line">    echo &quot;oooooooooooooooooooooooooo&quot;</div><div class="line">    echo &quot;&quot;</div><div class="line">done</div><div class="line"></div><div class="line">echo &quot;&quot;</div><div class="line">echo &quot;**************************************************&quot;</div><div class="line">echo &quot;Start to use autosub to generate subtitle for video in $base_dir&quot;</div><div class="line">echo &quot;**************************************************&quot;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> tools </category>
            
        </categories>
        
        
        <tags>
            
            <tag> video </tag>
            
            <tag> tips </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
